<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Tower of Babel</title>
  <subtitle>巴别塔</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-18T13:42:40.051Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Niklaus.chi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[游戏] Linux 上搭建饥荒联机版 Don&#39;t Starve Together服务器</title>
    <link href="http://yoursite.com/2017/07/15/%E6%B8%B8%E6%88%8F-Linux-%E4%B8%8A%E6%90%AD%E5%BB%BA%E9%A5%A5%E8%8D%92%E8%81%94%E6%9C%BA%E7%89%88-Don-t-Starve-Together%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2017/07/15/游戏-Linux-上搭建饥荒联机版-Don-t-Starve-Together服务器/</id>
    <published>2017-07-15T15:49:37.000Z</published>
    <updated>2017-07-18T13:42:40.051Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_015.jpg" alt=""><br><a id="more"></a></p>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>Ubuntu 64位环境：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libstdc++6:i386 libgcc1:i386 libcurl4-gnutls-dev:i386</div></pre></td></tr></table></figure>
<h2 id="安装SteamCMD和DST"><a href="#安装SteamCMD和DST" class="headerlink" title="安装SteamCMD和DST"></a>安装SteamCMD和DST</h2><p>下载SteamCMD：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir ~/steamcmd      </div><div class="line">cd ~/steamcmd</div><div class="line">wget http://media.steampowered.com/installer/steamcmd_linux.tar.gz</div></pre></td></tr></table></figure>
<p>解压并运行安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tar -xvzf steamcmd_linux.tar.gz</div><div class="line">./steamcmd.sh</div></pre></td></tr></table></figure>
<p>在 steam &gt; 模式下，登录及安装游戏包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">login anonymous                       </div><div class="line">force_install_dir ../DST</div><div class="line">app_update 343050 validate</div><div class="line">quit</div></pre></td></tr></table></figure>
<p>在上面的命令中，第一行以匿名方式登录，当然你可以登陆你自己的steamID；第二行是指定安装路径，将程序安装到steamcmd的同级目录下；第三行的343050 是Don’t Starve Together 在 Steam 平台中的 ID。</p>
<h2 id="配置Don’t-Starve-Together"><a href="#配置Don’t-Starve-Together" class="headerlink" title="配置Don’t Starve Together"></a>配置Don’t Starve Together</h2><h3 id="生成默认配置文件"><a href="#生成默认配置文件" class="headerlink" title="生成默认配置文件"></a>生成默认配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/DST/bin</div><div class="line">./dontstarve_dedicated_server_nullrenderer</div></pre></td></tr></table></figure>
<p>当看到一下提示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[200] Account Failed (6): &quot;E_INVALID_TOKEN&quot;</div><div class="line">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</div><div class="line">!!!! Your Server Will Not Start !!!!</div><div class="line">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</div></pre></td></tr></table></figure>
<p>按Ctrl+C中断，然后完善生成的默认配置</p>
<blockquote>
<p>之前查看很多资料都是需要在~/.klei/DoNotStarveTogether路径下写配置文件，现在该路径已经更改为~/.klei/DoNotStarveTogether/Cluster_1</p>
</blockquote>
<p>依照以下文件结构新建文件夹及文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Cluster_1</div><div class="line">├── cluster.ini</div><div class="line">├── cluster_token.txt</div><div class="line">├── Caves</div><div class="line">│   ├── modoverrides.lua</div><div class="line">│   ├── server.ini</div><div class="line">│   └── worldgenoverride.lua</div><div class="line">└── Master</div><div class="line">    ├── modoverrides.lua</div><div class="line">    ├── server.ini</div><div class="line">    └── worldgenoverride.lua      #重写世界具体物品数量等参数配置</div></pre></td></tr></table></figure></p>
<h3 id="设置Token"><a href="#设置Token" class="headerlink" title="设置Token"></a>设置Token</h3><p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_033.png" alt=""></p>
<p>点击个人资料</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_034.png" alt=""></p>
<p>点击Generate Server Token的按钮，将生成游戏令牌，将该Token复制到cluster_token.txt中</p>
<h3 id="设置服务器全局变量"><a href="#设置服务器全局变量" class="headerlink" title="设置服务器全局变量"></a>设置服务器全局变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/.klei/DoNotStarveTogether/Cluster_1</div><div class="line">sudo vi cluster.ini</div></pre></td></tr></table></figure>
<p>填入以下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">[GAMEPLAY]</div><div class="line">game_mode = survival                        # Endless无尽模式；Wildern荒野模式；Survival生存模式</div><div class="line">max_players = 6                             # 最大玩家数，1-64任意一个数</div><div class="line">pvp = false                                 #</div><div class="line">pause_when_empty = true                     # 世界没人时是否自动暂停</div><div class="line">enable_snapshots = true</div><div class="line">enable_autosaver = true</div><div class="line"></div><div class="line">[NETWORK]</div><div class="line">cluster_description = Live it               # 游戏房间描述</div><div class="line">cluster_name = LiveIt007                    # 游戏名称</div><div class="line">cluster_intention = cooperative             # 游戏模式 </div><div class="line">cluster_password = 123123123                # 密码</div><div class="line"></div><div class="line">[MISC]</div><div class="line">console_enabled = true                      # 控制台</div><div class="line"></div><div class="line">[SHARD]</div><div class="line">shard_enabled = true                        # 地下世界是否启动              </div><div class="line">bind_ip = 127.0.0.1                         # 固定IP</div><div class="line">master_ip = 127.0.0.1                       # 地上世界IP</div><div class="line">master_port = 10889                         # 地上世界端口</div><div class="line">cluster_key = supersecretkey                # 地下世界连接地上世界的钥匙</div></pre></td></tr></table></figure>
<p>按ESC，输入：wq 保存并退出vi编辑器。</p>
<h3 id="设置局部配置"><a href="#设置局部配置" class="headerlink" title="设置局部配置"></a>设置局部配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/.klei/DoNotStarveTogether/Cluster_1/Master</div><div class="line">sudo vi server.ini</div></pre></td></tr></table></figure>
<p>填入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[NETWORK]</div><div class="line">server_port = 11000</div><div class="line"></div><div class="line">[SHARD]</div><div class="line">is_master = true</div><div class="line"></div><div class="line">[STEAM]</div><div class="line">master_server_port = 27018</div><div class="line">authentication_port = 8768</div></pre></td></tr></table></figure>
<h3 id="设置地下世界的配置"><a href="#设置地下世界的配置" class="headerlink" title="设置地下世界的配置"></a>设置地下世界的配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/.klei/DoNotStarveTogether/Cluster_1/Caves</div><div class="line">sudo vi server.ini</div></pre></td></tr></table></figure>
<p>填入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[NETWORK]</div><div class="line">server_port = 11001</div><div class="line"></div><div class="line">[SHARD]</div><div class="line">is_master = false</div><div class="line">name = Caves</div><div class="line"></div><div class="line">[STEAM]</div><div class="line">master_server_port = 27019</div><div class="line">authentication_port = 8769</div></pre></td></tr></table></figure>
<h3 id="配置世界资源生成"><a href="#配置世界资源生成" class="headerlink" title="配置世界资源生成"></a>配置世界资源生成</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/.klei/DoNotStarveTogether/Cluster_1/Caves</div><div class="line">sudo vi worldgenoverride.lua</div></pre></td></tr></table></figure>
<p>填入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">return &#123;</div><div class="line">    override_enabled = true,</div><div class="line">    preset = &quot;DST_CAVE&quot;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2><p>创建启动服务器脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/</div><div class="line">sudo vi runDST.sh</div></pre></td></tr></table></figure>
<p>填入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">steamcmd_dir=&quot;$HOME/steamcmd&quot;          </div><div class="line">install_dir=&quot;$HOME/DST&quot;          </div><div class="line">cluster_name=&quot;Cluster_1&quot;</div><div class="line">dontstarve_dir=&quot;$HOME/.klei/DoNotStarveTogether&quot;</div><div class="line"></div><div class="line">function fail()</div><div class="line">&#123;</div><div class="line">        echo Error: &quot;$@&quot; &gt;&amp;2</div><div class="line">        exit 1</div><div class="line">&#125;</div><div class="line"></div><div class="line">function check_for_file()&#123;</div><div class="line">    if [ ! -e &quot;$1&quot; ]; then</div><div class="line">            fail &quot;Missing file: $1&quot;</div><div class="line">    fi</div><div class="line">&#125;</div><div class="line"></div><div class="line">cd &quot;$steamcmd_dir&quot; || fail &quot;Missing $steamcmd_dir directory!&quot;</div><div class="line"></div><div class="line">check_for_file &quot;$steamcmd_dir/steamcmd.sh&quot;</div><div class="line">check_for_file &quot;$dontstarve_dir/$cluster_name/cluster.ini&quot;</div><div class="line">check_for_file &quot;$dontstarve_dir/$cluster_name/cluster_token.txt&quot;</div><div class="line">check_for_file &quot;$dontstarve_dir/$cluster_name/Master/server.ini&quot;</div><div class="line">check_for_file &quot;$dontstarve_dir/$cluster_name/Caves/server.ini&quot;</div><div class="line"></div><div class="line">.~/steamcmd/steamcmd.sh +force_install_dir &quot;$install_dir&quot; +login anonymous +app_update 343050 validate +quit</div><div class="line"></div><div class="line">check_for_file &quot;$install_dir/bin&quot;</div><div class="line"></div><div class="line">cd &quot;$install_dir/bin&quot; || fail </div><div class="line"></div><div class="line">run_shared=(./dontstarve_dedicated_server_nullrenderer)</div><div class="line">run_shared+=(-console)</div><div class="line">run_shared+=(-cluster &quot;$cluster_name&quot;)</div><div class="line">run_shared+=(-monitor_parent_process $$)</div><div class="line"></div><div class="line">&quot;$&#123;run_shared[@]&#125;&quot; -shard Caves  | sed &apos;s/^/Caves:  /&apos; &amp;</div><div class="line">&quot;$&#123;run_shared[@]&#125;&quot; -shard Master | sed &apos;s/^/Master: /&apos;</div></pre></td></tr></table></figure>
<p>给脚本赋予执行权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chmod u+x ~/runDST.sh</div></pre></td></tr></table></figure>
<p>执行脚本，开启服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ~/runDST.sh</div></pre></td></tr></table></figure>
<p>当出现下面的日志时，说明服务器启动成功了</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_035.png" alt="success"></p>
<p>此时在客户端搜索在cluster.ini文件中配置的房间名，你就能找到你所创建的房间了</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_036.png" alt="success"></p>
<h2 id="进阶技能"><a href="#进阶技能" class="headerlink" title="进阶技能"></a>进阶技能</h2><h3 id="增加Mod"><a href="#增加Mod" class="headerlink" title="增加Mod"></a>增加Mod</h3><p>饥荒通过/DST/mods路径下的dedicated_server_mods_setup.lua文件确认需要下载那些mod。<br>首先去创意工坊找些 Mod，并获得其 id，或者找些 Mod 合集，将 Mod id 按以下形式（换行复制粘贴）保存在文件中。以下是完整文件内容</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--There are two functions that will install mods, ServerModSetup and ServerModCollectionSetup. Put the calls to the functions in this file and they will be executed on boot.</span></div><div class="line"> </div><div class="line"><span class="comment">--ServerModSetup takes a string of a specific mod's Workshop id. It will download and install the mod to your mod directory on boot.</span></div><div class="line">    <span class="comment">--The Workshop id can be found at the end of the url to the mod's Workshop page.</span></div><div class="line">    <span class="comment">--Example: http://steamcommunity.com/sharedfiles/filedetails/?id=350811795</span></div><div class="line">    <span class="comment">--ServerModSetup("350811795")</span></div><div class="line"> </div><div class="line"><span class="comment">--ServerModCollectionSetup takes a string of a specific mod's Workshop id. It will download all the mods in the collection and install them to the mod directory on boot.</span></div><div class="line">    <span class="comment">--The Workshop id can be found at the end of the url to the collection's Workshop page.</span></div><div class="line">    <span class="comment">--Example: http://steamcommunity.com/sharedfiles/filedetails/?id=379114180</span></div><div class="line">    <span class="comment">--ServerModCollectionSetup("379114180")</span></div><div class="line">     </div><div class="line">ServerModSetup(<span class="string">"345692228"</span>)   <span class="comment">--"Minimap HUD"</span></div><div class="line">ServerModSetup(<span class="string">"347079953"</span>)   <span class="comment">--"Display food values"</span></div><div class="line">ServerModSetup(<span class="string">"351325790"</span>)   <span class="comment">--"Geometric Placement"</span></div><div class="line">ServerModSetup(<span class="string">"367546858"</span>)   <span class="comment">--"Chinese Language Pack"</span></div><div class="line">ServerModSetup(<span class="string">"375850593"</span>)   <span class="comment">--"Extra Equip Slots"</span></div><div class="line">ServerModSetup(<span class="string">"375859599"</span>)   <span class="comment">--"Health Info"</span></div><div class="line">ServerModSetup(<span class="string">"376333686"</span>)   <span class="comment">--"Combined Status"</span></div><div class="line">ServerModSetup(<span class="string">"378160973"</span>)   <span class="comment">--"Global Positions"</span></div><div class="line">ServerModSetup(<span class="string">"444438334"</span>)   <span class="comment">--"DJPaul's Sort Inventory"</span></div><div class="line">ServerModSetup(<span class="string">"458587300"</span>)   <span class="comment">--"Fast Travel"</span></div><div class="line">ServerModSetup(<span class="string">"458940297"</span>)   <span class="comment">--"Food Values - Item Tooltips (Server and Client)"</span></div><div class="line">ServerModSetup(<span class="string">"462434129"</span>)   <span class="comment">--"Restart"</span></div><div class="line">ServerModSetup(<span class="string">"556027744"</span>)   <span class="comment">--"SUMMON BIGFOOT( With Old Bell)"</span></div><div class="line">ServerModSetup(<span class="string">"572538624"</span>)   <span class="comment">--"Chinese Plus"</span></div><div class="line">ServerModSetup(<span class="string">"623749604"</span>)   <span class="comment">--" Storeroom"</span></div><div class="line">ServerModSetup(<span class="string">"928706300"</span>)   <span class="comment">--"To Do Chores"</span></div><div class="line">ServerModSetup(<span class="string">"949822556"</span>)   <span class="comment">--"Egg Pain Together"</span></div><div class="line"> </div><div class="line"><span class="comment">--ServerModCollectionSetup("id")</span></div></pre></td></tr></table></figure>
<p>上面是我常用的几个Mod。但是dedicated_server_mods_setup.lua只是用于下载Mod，至于Mod是否启用以及配置则是modoverrides.lua 文件的功能。</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span> &#123;</div><div class="line">[<span class="string">"workshop-345692228"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-347079953"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-351325790"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-367546858"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-375850593"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-375859599"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-376333686"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-378160973"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-444438334"</span>] = &#123; enabled = <span class="literal">true</span>,</div><div class="line">    configuration_options =</div><div class="line">    &#123;</div><div class="line">        keybind = <span class="number">103</span>,</div><div class="line">        maxLights = <span class="number">2</span>,</div><div class="line">        backpackCategory = <span class="string">"food"</span></div><div class="line">    &#125;</div><div class="line">&#125;,</div><div class="line">[<span class="string">"workshop-458587300"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-458940297"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-462434129"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-556027744"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-572538624"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-623749604"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-928706300"</span>] = &#123; enabled = <span class="literal">true</span> &#125;,</div><div class="line">[<span class="string">"workshop-949822556"</span>] = &#123; enabled = <span class="literal">true</span> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>要注意，这两个文件的Mod Id是一一对应的。同时，将modoverrides.lua分别复制到Master和Caves文件下。</p>
<h3 id="设定管理员"><a href="#设定管理员" class="headerlink" title="设定管理员"></a>设定管理员</h3><p>在~/.klei/DoNotStarveTogether/Cluster_1路径下创建adminlist.txt文件，然后将想成为管理员的玩家的用户ID一行一个写入其中。<br>获取用户ID的两种方法：</p>
<pre><code>1. 让该玩家加入游戏，再查看日志，你会在日志中找到 KU_ 开头的一串用户 id
2. 让该玩家点击游戏主页面的 Account 按钮（和获得 token 一样），在页面中会有用户 id
</code></pre><p>下面是例子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">KU_3N5kE2Zp</div><div class="line">KU_BJY3CxYT</div><div class="line">KU_DF1orNGA</div><div class="line">KU_FAd2Yr8m</div><div class="line">KU_vvbUjgIX</div></pre></td></tr></table></figure>
<h3 id="用户黑名单，用户白名单"><a href="#用户黑名单，用户白名单" class="headerlink" title="用户黑名单，用户白名单"></a>用户黑名单，用户白名单</h3><p>同设定管理员操作一样，在~/.klei/DoNotStarveTogether/Cluster_1路径下分别创建blocklist.txt、whitelist.txt，然后将用户ID写入即可。</p>
<p>下面是最终的文件结构</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Cluster_1</div><div class="line">├── cluster.ini</div><div class="line">├── cluster_token.txt</div><div class="line">├── adminlist.txt</div><div class="line">├── blocklist.txt</div><div class="line">├── whitelist.txt</div><div class="line">├── Caves</div><div class="line">│   ├── modoverrides.lua</div><div class="line">│   ├── server.ini</div><div class="line">│   └── worldgenoverride.lua</div><div class="line">└── Master</div><div class="line">    ├── modoverrides.lua</div><div class="line">    ├── server.ini</div><div class="line">    └── worldgenoverride.lua      #重写世界具体物品数量等参数配置</div></pre></td></tr></table></figure>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p><a href="http://forums.kleientertainment.com/topic/64743-dedicated-server-command-line-options-guide/#comment-726427" target="_blank" rel="external"><font color="#87CEFA">关于启动参数的引用</font></a><br><a href="https://developer.valvesoftware.com/wiki/SteamCMD" target="_blank" rel="external"><font color="#87CEFA">SteamCMD 使用方法</font></a><br><a href="http://forums.kleientertainment.com/topic/64552-dedicated-server-settings-guide/#comment-754907" target="_blank" rel="external"><font color="#87CEFA">关于ini文件里面参数的引用</font></a><br><a href="http://forums.kleientertainment.com/topic/64441-dedicated-server-quick-setup-guide-linux/" target="_blank" rel="external"><font color="#87CEFA">官方论坛，关于linux的开服</font></a><br><a href="http://steamcommunity.com/sharedfiles/filedetails/?id=590565473" target="_blank" rel="external"><font color="#87CEFA">Klei 建议的 Don’t Strave Together Dedicated Server 搭建指南</font></a></p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2017-07-15 </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_015.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="游戏" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="饥荒" scheme="http://yoursite.com/tags/%E9%A5%A5%E8%8D%92/"/>
    
  </entry>
  
  <entry>
    <title>Java内存区域与内存溢出异常</title>
    <link href="http://yoursite.com/2016/09/10/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E5%BC%82%E5%B8%B8/"/>
    <id>http://yoursite.com/2016/09/10/Java内存区域与内存溢出异常/</id>
    <published>2016-09-10T10:39:44.000Z</published>
    <updated>2017-07-16T13:58:02.777Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_013.png" alt="学习思维导图"><br><a id="more"></a></p>
<h2 id="运行时数据区域"><a href="#运行时数据区域" class="headerlink" title="运行时数据区域"></a>运行时数据区域</h2><p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_032.png" alt="Java虚拟机运行时数据区"></p>
<h3 id="程序计数器"><a href="#程序计数器" class="headerlink" title="程序计数器"></a>程序计数器</h3><p>程序计数器（Program Counter Register）可以看作是当前线程所执行的字节码的行号指示器。在虚拟机的概念模型里，字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。<br>由于Java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定时刻，一个处理器（对于多核处理器来说是一个内核）都只会执行一条线程中的指令。因此每个线程都需要一个独立的程序计数器，各条线程之间计数器互不硬性，独立存储，我们称这类内存区域为“线程私有”的内存。<br>如果线程正在执行的是一个Java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是Native方法，这个计数器值则为空（Undefined）。此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。</p>
<h3 id="Java虚拟机栈"><a href="#Java虚拟机栈" class="headerlink" title="Java虚拟机栈"></a>Java虚拟机栈</h3><p>Java虚拟机栈（Java Virtual Machine Stacks）也是线程私有的，它的生命周期与线程相同。虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行的同时都会创建一个栈帧（Stack Frame）用于存储局部变量表、操作数栈、动态链接、方法出口等信息，每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机中入栈到出栈的过程。<br>经常有人把Java内存区分为堆内存（Heap）和栈内存（Stack），这种分法比较粗糙，其中所说的“栈”就是指虚拟机栈，或者说是虚拟机栈中的局部变量表部分。局部变量表存放了编译器可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference类型，它不等同于对象本身，可能是一个指向对象起始地址的引用指针，也可能是指向一个代表对象的句柄或者其他与此对象相关的位置）和returnAddress类型（指向了一条字节码指令的地址）。</p>
<h3 id="本地方法栈"><a href="#本地方法栈" class="headerlink" title="本地方法栈"></a>本地方法栈</h3><p>本地方法栈（Native Method Stack）与虚拟机栈所发挥的作用是非常相似的，它们的区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本带方法栈则为虚拟机使用到Native方法服务。</p>
<h3 id="Java堆"><a href="#Java堆" class="headerlink" title="Java堆"></a>Java堆</h3><p>Java堆（Java Heap）是Java虚拟机所管理的内存中最大的一块。Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配。<br>Java堆是垃圾收集器管理的主要区域，因此很多好时候也被称作“GC堆”（Garbage Collected Heap）。从内存回收的角度来看，由于现在收集器基本都采用分代收集算法，所以Java堆中还可以细分为：新生代和老年代；再细致一点的有Eden空间、From Survivor空间、To Survivor空间等。从内存分配的角度来看，线程共享的Java堆中可能划分出多个线程私有的分配缓冲区。不过无论如何划分，都与存放内容无关，无论哪个区域，存储的都仍然是对象实例，进一步划分的目的是为了更好地回收内存，或者更快地分配内存。<br>根据Java虚拟机规范的规定，Java堆刻意处于物理上不连续的内存空间中，只要逻辑上是连续的即可。在实现时，既可以实现成固定大小的，也可以是可扩展的，不过当前主流的虚拟机都是按照可扩展来实现的（通过-Xmx和-Xms控制）。</p>
<h3 id="方法区"><a href="#方法区" class="headerlink" title="方法区"></a>方法区</h3><p>方法区（Method Area）与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。虽然Java虚拟机规范把它描述为堆的一个逻辑部分，但是它却有一个别名叫做Non-Heap（非堆），目的应该是与Java堆区分开。<br>方法区跟Java堆同样不需要连续的内存和可以选择固定大小或者可拓展外，还可以选择不实现垃圾收集。</p>
<h3 id="运行时常量池"><a href="#运行时常量池" class="headerlink" title="运行时常量池"></a>运行时常量池</h3><p>运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中有一项信息是常量池，用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。<br>一般来说，除了保存Class文件中描述的符号引用外，还会把翻译出来的直接引用也存储在运行时常量池中。<br>运行时常量池具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区常量池，运行期间也可能将新的常量放入池中。</p>
<h3 id="直接内存"><a href="#直接内存" class="headerlink" title="直接内存"></a>直接内存</h3><p>直接内存（Direct Memory）并不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域。<br>显然，本机直接内存的分配不会受到Java堆大小的限制，但是，既然是内存，肯定还是受到本机总内存（包括RAM和SWAP区或者分页文件）大小以及出来器寻址空间的限制。</p>
<h2 id="内存溢出异常"><a href="#内存溢出异常" class="headerlink" title="内存溢出异常"></a>内存溢出异常</h2><h3 id="Java堆溢出"><a href="#Java堆溢出" class="headerlink" title="Java堆溢出"></a>Java堆溢出</h3><p>Java堆用于存储对象实例，只要不断地创建对象，并且保证GC Roots到对象之间有可达路径来避免垃圾回收机制清除这些对象，那么在对象数量到达最大堆的容量限制后就会发生内存溢出异常。<br>要解决这个区域的异常，一般的手段是先通过内存映像分析工具（如Eclipse Memory Analyzer）堆Dump出来的堆砖出快照进行分析，重点是确认内存中的对象是否是必要的，也就是先分清楚到底是出现了内存泄漏（Memory Leak）还是内存溢出（Memory Overflow）<br>如果是内存泄漏，可通过工具查看对象到GC Roots的引用链。找到泄漏对象是通过怎样的路径与GC Roots相关联并导致垃圾收集器无法自动回收它们。<br>如果是内存溢出，就应当检查虚拟机的堆参数（-Xmx和Xms），与机器物理内存对比看是否还可以调大，从代码上检查是否存在某些对象生命周期过长、持有状态时间过长的情况，尝试减少程序运行期的内存消耗。</p>
<h3 id="虚拟机栈和本地方法栈溢出"><a href="#虚拟机栈和本地方法栈溢出" class="headerlink" title="虚拟机栈和本地方法栈溢出"></a>虚拟机栈和本地方法栈溢出</h3><p>关于虚拟机栈和本地方法栈，在Java虚拟机规范中描述了两种异常：<br>如果线程请求的栈深度大于虚拟机所允许的最大深度，将抛出StackOverflowError异常。<br>如果虚拟机在扩展栈时无法申请到足够的内存空间，则抛出OutOfMemoryError异常。</p>
<h3 id="方法区和运行时常量池溢出"><a href="#方法区和运行时常量池溢出" class="headerlink" title="方法区和运行时常量池溢出"></a>方法区和运行时常量池溢出</h3><p>对于方法区的测试，基本的思路是运行时产生大量的类去填满方法区，直到溢出。<br>方法区溢出也是一种常见的内存溢出异常，一个类要被垃圾收集器回收掉，判定条件是比较苛刻的。在经常动态生成大量Class的应用中，特别需要注意类的回收状况。这类场景除了上面提到的程序使用了CGLib字节码增强和动态语言之外，常见的还有：大量JSP或动态产生JSP文件、给予OSGi的应用等。</p>
<h3 id="本机直接内存溢出"><a href="#本机直接内存溢出" class="headerlink" title="本机直接内存溢出"></a>本机直接内存溢出</h3><p>DirectMemory容量可通过-XX：MaxDirectMemorySize指定，如果不指定，则默认与Java堆最大值（-Xmx指定）一样。<br>由DirectMemory导致的内存溢出，一个明显的特征是Heap Dump文件中不会看见明显的异常，如果发现OOM之后Dump文件很小，而程序中又直接或间接使用了NIO，那么就可以考虑检查一下是不是这方面的原因。</p>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p>《深入理解Java虚拟机》</p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-09-10</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_013.png&quot; alt=&quot;学习思维导图&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="《深入理解Java虚拟机》读书笔记" scheme="http://yoursite.com/categories/%E3%80%8A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JVM" scheme="http://yoursite.com/tags/JVM/"/>
    
      <category term="内存溢出" scheme="http://yoursite.com/tags/%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/"/>
    
      <category term="异常" scheme="http://yoursite.com/tags/%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>[分享]阿里学习计划</title>
    <link href="http://yoursite.com/2016/09/03/%E5%88%86%E4%BA%AB-%E9%98%BF%E9%87%8C%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    <id>http://yoursite.com/2016/09/03/分享-阿里学习计划/</id>
    <published>2016-09-03T13:55:33.000Z</published>
    <updated>2017-07-16T14:00:19.498Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_014.png" alt="阿里学习计划"><br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_014.png&quot; alt=&quot;阿里学习计划&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="分享" scheme="http://yoursite.com/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="阿里学习计划" scheme="http://yoursite.com/tags/%E9%98%BF%E9%87%8C%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>配置Nginx反向代理Tomcat，并实现负载均衡、动静分离</title>
    <link href="http://yoursite.com/2016/08/27/%E9%85%8D%E7%BD%AENginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86Tomcat%EF%BC%8C%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E3%80%81%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/"/>
    <id>http://yoursite.com/2016/08/27/配置Nginx反向代理Tomcat，并实现负载均衡、动静分离/</id>
    <published>2016-08-27T05:10:15.000Z</published>
    <updated>2017-07-15T08:58:57.387Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_012.webp" alt=""><br><a id="more"></a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Nginx与Apache HTTP Server Project（简称Apache）一样，都是开源的HTTP服务器软件，它通常运行在服务器之上，绑定服务器的IP地址并监听某一个tcp端口来接收并处理HTTP请求，这样客户端（一般来说是IE, Firefox，Chrome这样的浏览器）就能够通过HTTP协议来获取服务器上的网页（HTML格式）、文档（PDF格式）、音频（MP4格式）、视频（MOV格式）等等资源。而Tomcat是用来处理java程序的解释器。本身apache也好，nginx也好，都是无法直接处理java语言的，只能通过设置，当收到java文件请求时，传给后方tomcat处理，再把tomcat的反应回给浏览器。</p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>JDK      ： 1.8.0_101<br>Nginx    ： 9.0.0.M9<br>Tomcat   ： 1.10.0<br>操作系统 ： ubuntu-16.04（64）</p>
<h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><h3 id="反向代理-1"><a href="#反向代理-1" class="headerlink" title="反向代理"></a>反向代理</h3><h4 id="什么是反向代理"><a href="#什么是反向代理" class="headerlink" title="什么是反向代理"></a>什么是反向代理</h4><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_026.jpg" alt=""></p>
<p>从上图可以看出：反向代理服务器位于网站机房，代理网站Web服务器接收Http请求，对请求进行转发。</p>
<h4 id="反向代理的作用"><a href="#反向代理的作用" class="headerlink" title="反向代理的作用"></a>反向代理的作用</h4><ul>
<li>保护网站安全：任何来自Internet的请求都必须先经过代理服务器；</li>
</ul>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_027.jpg" alt=""></p>
<ul>
<li>通过配置缓存功能加速Web请求：可以缓存真实Web服务器上的某些静态资源，减轻真实Web服务器的负载压力；</li>
</ul>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_028.jpg" alt=""></p>
<ul>
<li>实现负载均衡：充当负载均衡服务器均衡地分发请求，平衡集群中各个服务器的负载压力；</li>
</ul>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_029.jpg" alt=""></p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><blockquote>
<p>在配置之前，如果怕自己在配置过程中出错，可以将需要操作的配置文件进行备份，只需要使用sudo cp -rf fileName fileName-copy 即可备份文件。</p>
</blockquote>
<h4 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h4><p>修改/opt/tomcat9.0/conf目录下的server.xml文件<font size="3" color="red"></font></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps/springmvc&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</div><div class="line">	&lt;Context path=&quot;/springmvc&quot;  docBase=&quot;springmvc.war&quot;/&gt;    </div><div class="line">	&lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;  prefix=&quot;localhost_access_log&quot; suffix=&quot;.txt&quot; pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</div><div class="line">&lt;/Host&gt;</div></pre></td></tr></table></figure>
<h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h4><p>修改/var/log/nginx目录下的default文件，<font size="3" color="red">保证server_name与上面Tomcat配置文件server.xml中的Host name 是一致的</font>。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    #监听端口</div><div class="line">	listen 80 default_server;</div><div class="line">	listen [::]:80 default_server;</div><div class="line">	#网站程序根目录，一般Nginx和Tomcat在同一个目录</div><div class="line">	root /opt/tomcat9.0/webapps/springmvc;</div><div class="line">	index index.html index.htm index.nginx-debian.html;</div><div class="line">	#server_name要与Tomcat的server.xml中的Host name一致</div><div class="line">	server_name localhost;</div><div class="line">	location / &#123;    </div><div class="line">        proxy_set_header        Host $host;</div><div class="line">        proxy_set_header        X-Real-IP $remote_addr;</div><div class="line">        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">        proxy_pass http://192.168.182.132:8080;  </div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>Ubuntu下查询本机IP命令 ifconfig -a</p>
</blockquote>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>确认保存好配置文件之后，启动Tomcat和Nginx服务器，在浏览器中输入<a href="http://localhost/springmvc/test，会出现以下页面" target="_blank" rel="external">http://localhost/springmvc/test，会出现以下页面</a></p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_030.png" alt="成功页面"></p>
<p>此时我们可以查看一下Tomcat和Nginx的日志<br>Nginx(/var/log/nginx/access.log)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">127.0.0.1 - - [07/Sep/2016:15:30:47 +0800] &quot;GET /springmvc/test HTTP/1.1&quot; 200 101 &quot;-&quot; &quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:48.0) Gecko/20100101 Firefox/48.0&quot;</div></pre></td></tr></table></figure>
<p>Tomcat(/opt/tomcat9.0/logs/localhost_access_log.xxx.txt)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">192.168.182.132 - - [07/Sep/2016:15:30:47 +0800] &quot;GET /springmvc/test HTTP/1.0&quot; 200 106</div></pre></td></tr></table></figure>
<h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a><a href="https://nginx.org/en/docs/http/load_balancing.html" target="_blank" rel="external">负载均衡</a></h2><p>负载均衡 建立在现有网络结构之上，它提供了一种廉价有效透明的方法扩展网络设备和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的灵活性和可用性。<br>负载均衡，英文名称为Load Balance，其意思就是分摊到多个操作单元上进行执行，例如Web服务器、FTP服务器、企业关键应用服务器和其它关键任务服务器等，从而共同完成工作任务</p>
<h3 id="Nginx支持的负载均衡策略"><a href="#Nginx支持的负载均衡策略" class="headerlink" title="Nginx支持的负载均衡策略"></a>Nginx支持的负载均衡策略</h3><p>1 round-robin<br>requests to the application servers are distributed in a round-robin fashion<br>2 least-connected<br>next request is assigned to the server with the least number of active connections<br>3 ip-hash<br>a hash-function is used to determine what server should be selected for the next request (based on the client’s IP address)</p>
<h3 id="负载均衡的示例"><a href="#负载均衡的示例" class="headerlink" title="负载均衡的示例"></a>负载均衡的示例</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">upstream tomcat &#123;   </div><div class="line"> server 192.168.182.132:8080 weight=2;   </div><div class="line"> server 192.168.182.132:8081 weight=1;</div><div class="line"> server 192.168.182.132:8082;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen 80 default_server;</div><div class="line">	listen [::]:80 default_server;</div><div class="line"></div><div class="line">	root /opt/tomcat9.0/webapps/springmvc;</div><div class="line"></div><div class="line">	index index.html index.htm index.nginx-debian.html;</div><div class="line"></div><div class="line">	server_name localhost;</div><div class="line">	</div><div class="line">	location / &#123;</div><div class="line">        proxy_set_header        Host $host;</div><div class="line">        proxy_set_header        X-Real-IP $remote_addr;</div><div class="line">        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">        proxy_pass http://tomcat;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h2><p>从应用方面讲，Tomcat一般是做动态分析才会用到，支持jsp的解析，而Nginx一般是做静态分析，本身并不具备动态解析功能，需要配置其他插件或者通过其他软件系统才具备动态功能；而在性能方面，不做系统调优的情况下，Tomcat一般支持并发并不高，而Nginx在静态方面支持并发轻松达几万。为了充分利用两者优秀的性能，我们让Tomcat处理用户请求jsp页面实现动态分离，用Nginx处理css、js、html等静态资源，提高性能。</p>
<h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><h4 id="创建静态资源放置的文件夹"><a href="#创建静态资源放置的文件夹" class="headerlink" title="创建静态资源放置的文件夹"></a>创建静态资源放置的文件夹</h4><p>将项目中放置静态资源的文件夹拷贝至/opt/springmvc目录下，<font color="red">必须保证各个静态资源的相对路径和在项目中是一致的，否则会出现404错误</font>。<br><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_031.png" alt=""></p>
<h4 id="server下配置对应的localtion"><a href="#server下配置对应的localtion" class="headerlink" title="server下配置对应的localtion"></a>server下配置对应的localtion</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">upstream tomcat &#123;   </div><div class="line"> server 192.168.182.132:8080;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen 80 default_server;</div><div class="line">	listen [::]:80 default_server;</div><div class="line"></div><div class="line">	root /opt/tomcat9.0/webapps/springmvc;</div><div class="line"></div><div class="line">	index index.html index.htm index.nginx-debian.html;</div><div class="line"></div><div class="line">	server_name localhost;</div><div class="line">	</div><div class="line">	location / &#123;</div><div class="line">        proxy_set_header        Host $host;</div><div class="line">        proxy_set_header        X-Real-IP $remote_addr;</div><div class="line">        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">        proxy_pass http://tomcat;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	#使用正则表达式拦截后缀名为js、css的静态资源</div><div class="line">	location ~.*\.(js|css)?$ &#123;  </div><div class="line">		#静态资源放置的位置</div><div class="line">		root /opt;</div><div class="line">		#缓存过期时间</div><div class="line">		expires 1d;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>1 <a href="https://segmentfault.com/q/1010000006101263" target="_blank" rel="external">Tomcat+Nginx实现动静分离的功能，动态请求为什么没有发到Tomcat这里？</a></p>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p><a href="http://nginx.org/en/docs/" target="_blank" rel="external">nginx documentation</a><br><a href="http://www.open-open.com/lib/view/open1417488526633.html" target="_blank" rel="external">Nginx搭建反向代理服务器过程详解</a><br><a href="http://www.cnblogs.com/wufengtinghai/p/5237165.html" target="_blank" rel="external">使用Nginx实现负载均衡</a><br><a href="https://www.zhihu.com/question/32212996" target="_blank" rel="external">tomcat 与 nginx，apache的区别是什么？</a></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>写的比较简略，不成章法，接下来会慢慢完善</p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-08-27</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_012.webp&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu系统下安装Nginx服务器的方法</title>
    <link href="http://yoursite.com/2016/08/20/Ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85Nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2016/08/20/Ubuntu系统下安装Nginx服务器的方法/</id>
    <published>2016-08-20T05:08:41.000Z</published>
    <updated>2017-07-15T08:55:48.934Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_011.png" alt=""><br><a id="more"></a></p>
<h2 id="Nginx简介"><a href="#Nginx简介" class="headerlink" title="Nginx简介"></a>Nginx简介</h2><p>Nginx是一个非常轻量级的HTTP服务器，Nginx，它的发音为“engine x”，是一个高性能的HTTP和反向代理服务器，同时也是一个IMAP/POP3/SMTP 代理服务器。</p>
<h2 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h2><h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><p>操作系统 ：ubuntu-16.04（64）</p>
<h3 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h3><p>首先因为我并不是项目应用，而且也不是很频繁的使用Linux系统，所以选择更容易上手的Ubuntu系统作为本文Demo的对象。如果选择Debian等Linux系统或者使用源代码安装，在安装Nginx服务器之前需要手动安装依赖的库，但是在Ubuntu系统下，使用在线安装相对来说简单一点。<font color="red" size="3">在这里要提醒一下，在线安装和源代码安装的一些命令行和安装位置是不一样的，这个需要具体对待。</font></p>
<p>使用apt-get在线安装命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo apt-get install nginx</div></pre></td></tr></table></figure>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_023.png" alt="nginx安装"></p>
<p>从上图我们可以看出，安装的Nginx的版本是<strong>1.10.0</strong>。Ubuntu安装Nginx之后的文件结构大致如下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">文件</th>
<th style="text-align:center">路径</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">配置文件</td>
<td style="text-align:center">/etc/nginx</td>
</tr>
<tr>
<td style="text-align:center">虚拟主机</td>
<td style="text-align:center">/etc/nginx/sites-available</td>
</tr>
<tr>
<td style="text-align:center">启动程序</td>
<td style="text-align:center">/usr/sbin/nginx</td>
</tr>
<tr>
<td style="text-align:center">日志</td>
<td style="text-align:center">/var/log/nginx</td>
</tr>
<tr>
<td style="text-align:center">nginx启动脚本</td>
<td style="text-align:center">/etc/init.d/</td>
</tr>
<tr>
<td style="text-align:center">默认虚拟主机</td>
<td style="text-align:center">/usr/share/nginx/www</td>
</tr>
</tbody>
</table>
<h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><h4 id="在线安装的启动过程"><a href="#在线安装的启动过程" class="headerlink" title="在线安装的启动过程"></a>在线安装的启动过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo /etc/init.d/nginx start</div></pre></td></tr></table></figure>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_024.png" alt=""></p>
<p>如果出现<strong>[ ok ] Starting nginx (via systemctl): nginx.service.</strong>的提示，说明Nginx服务器启动成功，这个时候我们在浏览器中访问一下<a href="http://localhost/，正常情况下会出现Nginx的欢迎页面如下图。" target="_blank" rel="external">http://localhost/，正常情况下会出现Nginx的欢迎页面如下图。</a></p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_025.png" alt=""></p>
<h4 id="常用Nginx命令"><a href="#常用Nginx命令" class="headerlink" title="常用Nginx命令"></a>常用Nginx命令</h4><p>启动Nginx服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo /etc/init.d/nginx start</div></pre></td></tr></table></figure>
<p>关闭Nginx服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service nginx stop</div></pre></td></tr></table></figure>
<p>重启Nginx服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service nginx restart</div></pre></td></tr></table></figure>
<p>重新加载配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -s reload</div></pre></td></tr></table></figure>
<p>检查配置文件是否出错</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -t</div></pre></td></tr></table></figure>
<h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><h3 id="主要配置文件"><a href="#主要配置文件" class="headerlink" title="主要配置文件"></a>主要配置文件</h3><p>通过上面的表格我们知道Nginx的配置文件是/etc/nginx/nginx.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line">user www-data;</div><div class="line">worker_processes auto;</div><div class="line">pid /run/nginx.pid;</div><div class="line"></div><div class="line">events &#123;</div><div class="line">	worker_connections 768;</div><div class="line">	# multi_accept on;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http &#123;</div><div class="line"></div><div class="line">	##</div><div class="line">	# Basic Settings</div><div class="line">	##</div><div class="line"></div><div class="line">	sendfile on;</div><div class="line">	tcp_nopush on;</div><div class="line">	tcp_nodelay on;</div><div class="line">	keepalive_timeout 65;</div><div class="line">	types_hash_max_size 2048;</div><div class="line">	# server_tokens off;</div><div class="line"></div><div class="line">	# server_names_hash_bucket_size 64;</div><div class="line">	# server_name_in_redirect off;</div><div class="line"></div><div class="line">	include /etc/nginx/mime.types;</div><div class="line">	default_type application/octet-stream;</div><div class="line"></div><div class="line">	##</div><div class="line">	# SSL Settings</div><div class="line">	##</div><div class="line"></div><div class="line">	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE</div><div class="line">	ssl_prefer_server_ciphers on;</div><div class="line"></div><div class="line">	##</div><div class="line">	# Logging Settings</div><div class="line">	##</div><div class="line"></div><div class="line">	access_log /var/log/nginx/access.log;</div><div class="line">	error_log /var/log/nginx/error.log;</div><div class="line"></div><div class="line">	##</div><div class="line">	# Gzip Settings</div><div class="line">	##</div><div class="line"></div><div class="line">	gzip on;</div><div class="line">	gzip_disable &quot;msie6&quot;;</div><div class="line"></div><div class="line">	# gzip_vary on;</div><div class="line">	# gzip_proxied any;</div><div class="line">	# gzip_comp_level 6;</div><div class="line">	# gzip_buffers 16 8k;</div><div class="line">	# gzip_http_version 1.1;</div><div class="line">	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;</div><div class="line"></div><div class="line">	##</div><div class="line">	# Virtual Host Configs</div><div class="line">	##</div><div class="line"></div><div class="line">	include /etc/nginx/conf.d/*.conf;</div><div class="line">	include /etc/nginx/sites-enabled/*;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">#mail &#123;</div><div class="line">#	# See sample authentication script at:</div><div class="line">#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript</div><div class="line"># </div><div class="line">#	# auth_http localhost/auth.php;</div><div class="line">#	# pop3_capabilities &quot;TOP&quot; &quot;USER&quot;;</div><div class="line">#	# imap_capabilities &quot;IMAP4rev1&quot; &quot;UIDPLUS&quot;;</div><div class="line"># </div><div class="line">#	server &#123;</div><div class="line">#		listen     localhost:110;</div><div class="line">#		protocol   pop3;</div><div class="line">#		proxy      on;</div><div class="line">#	&#125;</div><div class="line"># </div><div class="line">#	server &#123;</div><div class="line">#		listen     localhost:143;</div><div class="line">#		protocol   imap;</div><div class="line">#		proxy      on;</div><div class="line">#	&#125;</div><div class="line">#&#125;</div></pre></td></tr></table></figure>
<p>其中设置了一些必要的参数，我们发现62行有这样的语句<font color="red" size="3">include /etc/nginx/sites-enabled/*</font>.可以看出/etc/nginx/sites-enabled/default文件也是一个核心的配置文件，其中包含了服务器跟目录、服务器名称、location信息和server信息等配置信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line">##</div><div class="line"># You should look at the following URL&apos;s in order to grasp a solid understanding</div><div class="line"># of Nginx configuration files in order to fully unleash the power of Nginx.</div><div class="line"># http://wiki.nginx.org/Pitfalls</div><div class="line"># http://wiki.nginx.org/QuickStart</div><div class="line"># http://wiki.nginx.org/Configuration</div><div class="line">#</div><div class="line"># Generally, you will want to move this file somewhere, and start with a clean</div><div class="line"># file but keep this around for reference. Or just disable in sites-enabled.</div><div class="line">#</div><div class="line"># Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.</div><div class="line">##</div><div class="line"></div><div class="line"># Default server configuration</div><div class="line">#</div><div class="line">server &#123;</div><div class="line">	listen 80 default_server;</div><div class="line">	listen [::]:80 default_server;</div><div class="line"></div><div class="line">	# SSL configuration</div><div class="line">	#</div><div class="line">	# listen 443 ssl default_server;</div><div class="line">	# listen [::]:443 ssl default_server;</div><div class="line">	#</div><div class="line">	# Note: You should disable gzip for SSL traffic.</div><div class="line">	# See: https://bugs.debian.org/773332</div><div class="line">	#</div><div class="line">	# Read up on ssl_ciphers to ensure a secure configuration.</div><div class="line">	# See: https://bugs.debian.org/765782</div><div class="line">	#</div><div class="line">	# Self signed certs generated by the ssl-cert package</div><div class="line">	# Don&apos;t use them in a production server!</div><div class="line">	#</div><div class="line">	# include snippets/snakeoil.conf;</div><div class="line"></div><div class="line">	root /var/www/html;</div><div class="line"></div><div class="line">	# Add index.php to the list if you are using PHP</div><div class="line">	index index.html index.htm index.nginx-debian.html;</div><div class="line"></div><div class="line">	server_name _;</div><div class="line"></div><div class="line">	location / &#123;</div><div class="line">		# First attempt to serve request as file, then</div><div class="line">		# as directory, then fall back to displaying a 404.</div><div class="line">		try_files $uri $uri/ =404;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">	#</div><div class="line">	#location ~ \.php$ &#123;</div><div class="line">	#	include snippets/fastcgi-php.conf;</div><div class="line">	#</div><div class="line">	#	# With php7.0-cgi alone:</div><div class="line">	#	fastcgi_pass 127.0.0.1:9000;</div><div class="line">	#	# With php7.0-fpm:</div><div class="line">	#	fastcgi_pass unix:/run/php/php7.0-fpm.sock;</div><div class="line">	#&#125;</div><div class="line"></div><div class="line">	# deny access to .htaccess files, if Apache&apos;s document root</div><div class="line">	# concurs with nginx&apos;s one</div><div class="line">	#</div><div class="line">	#location ~ /\.ht &#123;</div><div class="line">	#	deny all;</div><div class="line">	#&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"># Virtual Host configuration for example.com</div><div class="line">#</div><div class="line"># You can move that to a different file under sites-available/ and symlink that</div><div class="line"># to sites-enabled/ to enable it.</div><div class="line">#</div><div class="line">#server &#123;</div><div class="line">#	listen 80;</div><div class="line">#	listen [::]:80;</div><div class="line">#</div><div class="line">#	server_name example.com;</div><div class="line">#</div><div class="line">#	root /var/www/example.com;</div><div class="line">#	index index.html;</div><div class="line">#</div><div class="line">#	location / &#123;</div><div class="line">#		try_files $uri $uri/ =404;</div><div class="line">#	&#125;</div><div class="line">#&#125;</div></pre></td></tr></table></figure>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p><a href="http://nginx.org/en/docs/" target="_blank" rel="external">nginx documentation</a><br><a href="http://www.cnblogs.com/languoliang/archive/2013/04/01/nginx.html" target="_blank" rel="external">Ubuntu中Nginx的安装与配置</a><br><a href="http://www.jb51.net/os/Ubuntu/64596.html" target="_blank" rel="external">Ubuntu下安装nginx的步骤分享</a></p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-08-20</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_011.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下Tomcat部署Web项目</title>
    <link href="http://yoursite.com/2016/08/13/Ubuntu%E4%B8%8BTomcat%E9%83%A8%E7%BD%B2Web%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2016/08/13/Ubuntu下Tomcat部署Web项目/</id>
    <published>2016-08-13T05:06:57.000Z</published>
    <updated>2017-07-15T13:08:06.217Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_010.png" alt=""><br><a id="more"></a></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>操作系统 ：ubuntu-16.04（64）<br>JDK      ：1.8.0_101<br>Tomcat   ：9.0.0.M9</p>
<h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>Tomcat官方网站下载<a href="http://tomcat.apache.org/download-90.cgi" target="_blank" rel="external">地址</a>，在Ubuntu操作系统上，我们下载zip和tar.gz类型的安装包。<br><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_016.png" alt="官网下载目录"></p>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>将下载到Downloads目录下的 tar.gz文件解压至 /opt目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tar zxvf apache-tomcat-9.0.0.M9.tar.gz  -C /opt</div></pre></td></tr></table></figure>
<p>为了方便配置，进入/opt目录给文件夹改名（非必须）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mv apache-tomcat-9.0.0.M9 tomcat9.0</div></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>进入/opt/tomcat9.0目录，打开启动的脚本文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /opt/tomcat9.0</div><div class="line">sudo gedit./bin/startup.sh</div></pre></td></tr></table></figure>
<p>打开startup.sh文件后，添加配置信息（注意替换路径）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">JAVA_HOME=/usr/java/jdk1.8</div><div class="line">JRE_HOME=$JAVA_HOME/jre</div><div class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME</div><div class="line">CLASSPATH=.:$JRE_HOME/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</div><div class="line">TOMCAT_HOME=/opt/tomcat9.0</div></pre></td></tr></table></figure>
<h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><p>进入/opt/tomcat9.0目录，启动Tomcat</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ./bin/startup.sh</div></pre></td></tr></table></figure>
<p>输出：<br>Using CATALINA_BASE:   /opt/tomcat9.0<br>Using CATALINA_HOME:   /opt/tomcat9.0<br>Using CATALINA_TMPDIR: /opt/tomcat9.0/temp<br>Using JRE_HOME:        /usr/java/jdk1.8<br>Using CLASSPATH:       /opt/tomcat9.0/bin/bootstrap.jar:/opt/tomcat9.0/bin/tomcat-juli.jar<br>Tomcat started.</p>
<p>验证tomcat配置和安装是否成功<br>在浏览器中输入：<a href="http://localhost:8080/，并访问该网址" target="_blank" rel="external">http://localhost:8080/，并访问该网址</a><br><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_017.png" alt="success page"><br>如果出现以上页面，则说明配置成功。</p>
<p>关闭Tomcat</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ./bin/shutdown.sh</div></pre></td></tr></table></figure>
<p>输出：<br>Using CATALINA_BASE:   /opt/tomcat9.0<br>Using CATALINA_HOME:   /opt/tomcat9.0<br>Using CATALINA_TMPDIR: /opt/tomcat9.0/temp<br>Using JRE_HOME:        /usr/java/jdk1.8<br>Using CLASSPATH:       /opt/tomcat9.0/bin/bootstrap.jar:/opt/tomcat9.0/bin/tomcat-juli.jar</p>
<p>此时再次访问<a href="http://localhost:8080/页面就会出现" target="_blank" rel="external">http://localhost:8080/页面就会出现</a> <font color="red">Unable to connect</font>的提示，说明Tomcat被正确关闭。</p>
<h2 id="IDE导出War包"><a href="#IDE导出War包" class="headerlink" title="IDE导出War包"></a>IDE导出War包</h2><p>暂无</p>
<p>这是我之前导出的一个<strong><a href="http://octlz2jco.bkt.clouddn.com/download_file_001_springmvc.war" target="_blank" rel="external">war包</a></strong></p>
<h2 id="部署Web项目"><a href="#部署Web项目" class="headerlink" title="部署Web项目"></a>部署Web项目</h2><p>Tomcat部署Java Web项目有多种方式，此处我们选择war包部署。</p>
<h3 id="war"><a href="#war" class="headerlink" title="war"></a>war</h3><p>我们将导出的web项目war包拷贝到webapps目录中</p>
<p>位置 ： /opt/tomcat9.0/webapps/springmvc/springmvc.war</p>
<h3 id="Tomcat-1"><a href="#Tomcat-1" class="headerlink" title="Tomcat"></a>Tomcat</h3><blockquote>
<p>sudo chmod -R 777 fileName 修改文件夹权限</p>
</blockquote>
<p>进入/opt/tomcat9.0/conf目录，打开server.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /opt/tomcat9.0/conf</div><div class="line">sudo subl server.xml</div></pre></td></tr></table></figure>
<blockquote>
<p>因为不经常使用Linux操作系统，更不太喜欢vi等编辑器，所以我在Ubuntu下安装了sublime text3</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"> <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"localhost"</span>  <span class="attr">appBase</span>=<span class="string">"webapps/springmvc"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">"/springmvc"</span>  <span class="attr">docBase</span>=<span class="string">"springmvc.war"</span>/&gt;</span>    </div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- SingleSignOn valve, share authentication between web applications</span></div><div class="line">         Documentation at: /docs/config/valve.html --&gt;</div><div class="line">    <span class="comment">&lt;!--</span></div><div class="line">    &lt;Valve className="org.apache.catalina.authenticator.SingleSignOn" /&gt;</div><div class="line">    --&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- Access log processes all example.</span></div><div class="line">         Documentation at: /docs/config/valve.html</div><div class="line">         <span class="doctag">Note:</span> The pattern used is equivalent to using pattern="common" --&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> <span class="attr">directory</span>=<span class="string">"logs"</span></span></div><div class="line">           <span class="attr">prefix</span>=<span class="string">"localhost_access_log"</span> <span class="attr">suffix</span>=<span class="string">".txt"</span></div><div class="line">           <span class="attr">pattern</span>=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></div></pre></td></tr></table></figure>
<p>appBase代表应用的基础目录，原始默认位置为“webapps”即对应于tomcat根目录下的文件夹webapps；<br>docBase相当于指定的虚拟目录对应的应用程序的绝对路径,是web应用和本地路径;<br>path是tomcat访问这个应用的URL路径。<br>workDir是运行编译成为java二进制代码时候存放的目录。</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>完成配置并保存好server.xml之后，启动Tomcat</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ./bin/startup.sh</div></pre></td></tr></table></figure>
<p>在浏览器中输入web项目的访问路径 localhost:8080/springmvc/test</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_018.png" alt="成功页面"></p>
<p>如果出现以上的页面说明部署成功。</p>
<h3 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h3><p>由于对server.xml文件中的appBase、path以及访问路径还有一些困惑又做了一点实验:</p>
<h4 id="当我如上面的配置启动Tomcat时，webapps-springmvc的目录下的springmvc-war被解压"><a href="#当我如上面的配置启动Tomcat时，webapps-springmvc的目录下的springmvc-war被解压" class="headerlink" title="当我如上面的配置启动Tomcat时，webapps/springmvc的目录下的springmvc.war被解压"></a>当我如上面的配置启动Tomcat时，webapps/springmvc的目录下的springmvc.war被解压</h4><p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_019.png" alt=""></p>
<h4 id="我尝试修改appBase的内容，进行测试"><a href="#我尝试修改appBase的内容，进行测试" class="headerlink" title="我尝试修改appBase的内容，进行测试"></a>我尝试修改appBase的内容，进行测试</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"> <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"localhost"</span>  <span class="attr">appBase</span>=<span class="string">"webapps/springmvc111"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">"/springmvc"</span>  <span class="attr">docBase</span>=<span class="string">"springmvc.war"</span>/&gt;</span>    </div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> <span class="attr">directory</span>=<span class="string">"logs"</span></span></div><div class="line">           <span class="attr">prefix</span>=<span class="string">"localhost_access_log"</span> <span class="attr">suffix</span>=<span class="string">".txt"</span></div><div class="line">           <span class="attr">pattern</span>=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></div></pre></td></tr></table></figure>
<p>启动Tomcat之后，发现webapps下新生成了一个名为springmvc111的空文件夹</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_020.png" alt=""></p>
<p>此时在访问localhost:8080/springmvc/test会提示<font color="red">Unable to connect</font>,并且在关闭Tomcat的时候会提示如下信息</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_021.png" alt=""></p>
<h4 id="我再次尝试修改path的内容，进行测试"><a href="#我再次尝试修改path的内容，进行测试" class="headerlink" title="我再次尝试修改path的内容，进行测试"></a>我再次尝试修改path的内容，进行测试</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"> <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"localhost"</span>  <span class="attr">appBase</span>=<span class="string">"webapps/springmvc"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">"/springmvc111"</span>  <span class="attr">docBase</span>=<span class="string">"springmvc.war"</span>/&gt;</span>    </div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> <span class="attr">directory</span>=<span class="string">"logs"</span></span></div><div class="line">           <span class="attr">prefix</span>=<span class="string">"localhost_access_log"</span> <span class="attr">suffix</span>=<span class="string">".txt"</span></div><div class="line">           <span class="attr">pattern</span>=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></div></pre></td></tr></table></figure>
<p>再次启动Tomcat，webapps/springmvc的目录下的springmvc.war被解压到springmvc111目录中</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_022.png" alt=""></p>
<p>此时访问localhost:8080/springmvc/test，页面显示正常。</p>
<h4 id="因为我的war包对应的web项目丢失了，而且之后重新做了一个在导出war包这个过程总是会出问题，所以后续的一些测试暂时就不做了。"><a href="#因为我的war包对应的web项目丢失了，而且之后重新做了一个在导出war包这个过程总是会出问题，所以后续的一些测试暂时就不做了。" class="headerlink" title="因为我的war包对应的web项目丢失了，而且之后重新做了一个在导出war包这个过程总是会出问题，所以后续的一些测试暂时就不做了。"></a><font color="red">因为我的war包对应的web项目丢失了，而且之后重新做了一个在导出war包这个过程总是会出问题，所以后续的一些测试暂时就不做了。</font></h4><h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-08-13</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_010.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="Tomcat" scheme="http://yoursite.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16安装JDK1.8</title>
    <link href="http://yoursite.com/2016/08/06/Ubuntu16%E5%AE%89%E8%A3%85JDK1-8/"/>
    <id>http://yoursite.com/2016/08/06/Ubuntu16安装JDK1-8/</id>
    <published>2016-08-06T05:06:16.000Z</published>
    <updated>2017-07-15T05:34:10.293Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_009.png" alt=""><br><a id="more"></a></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统 ： ubuntu-16.04（64）</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>下载之前可通过命令行查看操作系统位数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getconf LONG_BIT</div></pre></td></tr></table></figure>
<p>下载对应的<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">JDK文件</a></p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_015.png" alt="截图"></p>
<p>我选择的是jdk-8u101-linux-x64.tar.gz</p>
<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>创建目录作为JDK的安装目录，这里选择安装位置为:/usr/java/</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /usr/java</div></pre></td></tr></table></figure>
<p>将下载到Downloads文件夹中的JDK文件解压到 /usr/java 目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd Downloads/</div><div class="line">sudo tar zxvf jdk-8u101-linux-x64.tar.gz -C /usr/java</div></pre></td></tr></table></figure>
<p>为了配置环境变量方便，进入/usr/java 目录下给文件夹改名（非必须）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mv jdk1.8.0_101 jdk1.8</div></pre></td></tr></table></figure>
<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="配置环境-1"><a href="#配置环境-1" class="headerlink" title="配置环境"></a>配置环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo gedit /etc/environment</div></pre></td></tr></table></figure>
<p>将内容替换为下面的内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">PATH=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games$JAVA_HOME/bin&quot;</div><div class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</div><div class="line">export JAVA_HOME=/usr/java/jdk1.8</div></pre></td></tr></table></figure>
<p>修改完成后保存并关闭，输入以下命令使环境变量生效</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/environment</div></pre></td></tr></table></figure>
<h3 id="检查配置成果"><a href="#检查配置成果" class="headerlink" title="检查配置成果"></a>检查配置成果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo $JAVA_HOME</div></pre></td></tr></table></figure>
<p>输出：/usr/java/jdk1.8</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo $CLASSPATH</div></pre></td></tr></table></figure>
<p>输出：.:/usr/java/jdk1.8/lib:/usr/java/jdk1.8/jre/lib:.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo $PATH</div></pre></td></tr></table></figure>
<p>输出：<br>/usr/java/jdk1.8/bin:/usr/java/jdk1.8/jre/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:<br>/bin:/usr/games:/usr/local/games$JAVA_HOME/bin:/snap/bin</p>
<h3 id="查看安装版本"><a href="#查看安装版本" class="headerlink" title="查看安装版本"></a>查看安装版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -version</div></pre></td></tr></table></figure>
<p>输出：<br>java version “1.8.0_101”<br>Java(TM) SE Runtime Environment (build 1.8.0_101-b13)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)</p>
<blockquote>
<font color="blue">如果没有起效可尝试重启，毕竟重启治百病 </font>

</blockquote>
<h3 id="配置所有用户的环境变量，不然重启之后依然找不到Java命令"><a href="#配置所有用户的环境变量，不然重启之后依然找不到Java命令" class="headerlink" title="配置所有用户的环境变量，不然重启之后依然找不到Java命令"></a>配置所有用户的环境变量，不然重启之后依然找不到Java命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo gedit /etc/profile</div></pre></td></tr></table></figure>
<p>在尾部添加一下内容即可（注意替换路径）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#set Java environment</div><div class="line">JAVA_HOME=/usr/java/jdk1.8</div><div class="line">export JRE_HOME=/usr/java/jdk1.8/jre</div><div class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH</div><div class="line">export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</div></pre></td></tr></table></figure>
<h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p><a href="http://www.linuxidc.com/Linux/2015-09/122689.htm" target="_blank" rel="external">Ubuntu 15.04 安装JDK并配置成为默认的JDK</a></p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-08-06</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_009.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="JDK1.8" scheme="http://yoursite.com/tags/JDK1-8/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu系统安装使用Sublime Text3</title>
    <link href="http://yoursite.com/2016/08/06/Ubuntu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Sublime-Text3/"/>
    <id>http://yoursite.com/2016/08/06/Ubuntu系统安装使用Sublime-Text3/</id>
    <published>2016-08-06T05:00:00.000Z</published>
    <updated>2017-07-20T13:23:13.619Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_016.png" alt=""><br><a id="more"></a></p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul>
<li>Ubuntu 16.04</li>
<li>Sublime Text 3</li>
</ul>
<h2 id="Sublime-Text-3安装步骤"><a href="#Sublime-Text-3安装步骤" class="headerlink" title="Sublime Text 3安装步骤"></a>Sublime Text 3安装步骤</h2><h3 id="添加Sublime-Text-3软件包的软件源"><a href="#添加Sublime-Text-3软件包的软件源" class="headerlink" title="添加Sublime Text 3软件包的软件源"></a>添加Sublime Text 3软件包的软件源</h3><pre><code>sudo add-apt-repository ppa:webupd8team/sublime-text-3
</code></pre><h3 id="使用以下命令更新系统软件源"><a href="#使用以下命令更新系统软件源" class="headerlink" title="使用以下命令更新系统软件源"></a>使用以下命令更新系统软件源</h3><pre><code>sudo apt-get update
</code></pre><h3 id="使用以下命令安装Sublime-Text-3"><a href="#使用以下命令安装Sublime-Text-3" class="headerlink" title="使用以下命令安装Sublime Text 3"></a>使用以下命令安装Sublime Text 3</h3><pre><code>sudo apt-get install sublime-text-installer
</code></pre><p>等待Sublime安装成功，就可以通过subl命令调用了。</p>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-08-06</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_016.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="Sublime Text3" scheme="http://yoursite.com/tags/Sublime-Text3/"/>
    
  </entry>
  
  <entry>
    <title>[Spring MVC菜鸟之旅] Spring MVC 与 MyBatis整合</title>
    <link href="http://yoursite.com/2016/07/16/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85-Spring-MVC-%E4%B8%8E-MyBatis%E6%95%B4%E5%90%88/"/>
    <id>http://yoursite.com/2016/07/16/Spring-MVC菜鸟之旅-Spring-MVC-与-MyBatis整合/</id>
    <published>2016-07-15T16:02:14.000Z</published>
    <updated>2017-07-15T03:25:36.204Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_008.webp" alt="https://tuchong.com/1453100/13582509/"><br><a id="more"></a></p>
<h2 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h2><p>MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以对配置和原生Map使用简单的 XML 或注解，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。</p>
<h2 id="整合"><a href="#整合" class="headerlink" title="整合"></a>整合</h2><p>MyBatis-Spring 会帮助你将 MyBatis 代码无缝地整合到 Spring 中。 使用这个类库中的类, Spring 将会加载必要的 MyBatis 工厂类和 session 类。 这个类库也提供一个简单的方式来注入 MyBatis 数据映射器和 SqlSession 到业务层的 bean 中。 而且它也会处理事务, 翻译 MyBatis 的异常到 Spring 的 DataAccessException 异常中。最终,它并 不会依赖于 MyBatis,Spring 或 MyBatis-Spring 来构建应用程序代码。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>要使用MyBatis，并且使用Maven来构建项目，则只需将下面的dependency代码置于pom.xml文件中：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<p>要和Spring一起使用MyBatis，我们需要在SPring应用上下文中定义至少两样东西：一个SqlSessionFactory 和至少一个数据映射器类。</p>
<h3 id="从XML中构建SqlSessionFactory"><a href="#从XML中构建SqlSessionFactory" class="headerlink" title="从XML中构建SqlSessionFactory"></a>从XML中构建SqlSessionFactory</h3><p>在 MyBatis-Spring中,SqlSessionFactoryBean 是用于创建SqlSessionFactory的。要配置这个工厂bean,放置下面的代码在 Spring的XML配置文件中:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<p>要注意SqlSessionFactoryBean需要一个DataSource（数据源）。这可以是任意的DataSource，配置它就像配置其他的Spring数据库连接是一样的。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DriverManagerDataSource"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="创建数据映射器类"><a href="#创建数据映射器类" class="headerlink" title="创建数据映射器类"></a>创建数据映射器类</h3><p>我们创建的数据映射器类如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TestMapper</span> </span>&#123;</div><div class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * From auth_user WHERE id = #&#123;id&#125;"</span>)</div><div class="line">    <span class="function">Test <span class="title">getTest</span><span class="params">(@Param(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后用MapperFactoryBean将给接口加入到Spring中：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"testMapper"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperFactoryBean"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperInterface"</span> <span class="attr">value</span>=<span class="string">"com.springmvc.niklaus.dao.TestMapper"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">ref</span>=<span class="string">"sqlSessionFactory"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<p><font color="red">注意</font>所指定的映射器类必须是一个接口而不是具体的实现类。在这个实例中，注解被用来指定SQL语句，但是MyBatis的映射器XML文件也可以用，这个我将在下面再讲。</p>
<h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><p>一个使用MyBatis-Spring的主要原因是它允许MyBatis参与到Spring的事务管理中，而不是给MyBatis创建一个新的特定的事务管理器。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span> /&gt;</span></div></pre></td></tr></table></figure>
<p>要开始Spring的事务管理，要在Spring的XML配置文件中创建一个DataSourceTransactionManager对象，然后使用<tx:annotation-driven>指定transactionManager作为事务管理器，支持事务注解（@Transactional），此时在需要事务管理的Service上使用@Transactional注解就可以了，<tx:annoation-driven>只会查找和它在相同的应用上下文件中定义的bean上面的@Transactional注解。</tx:annoation-driven></tx:annotation-driven></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="meta">@Transactional</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServiceImpl</span> <span class="keyword">implements</span> <span class="title">TestService</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> TestMapper testMapper;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Test <span class="title">getTestById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> testMapper.getTest(id);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>先附上完整的MyBatis的配置XML文件spring-db.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></div><div class="line">       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DriverManagerDataSource"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"testMapper"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperFactoryBean"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperInterface"</span> <span class="attr">value</span>=<span class="string">"com.springmvc.niklaus.dao.TestMapper"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">ref</span>=<span class="string">"sqlSessionFactory"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这样，一个满足基本增删改查的Spring与MyBatis的整合应用就完成了，如果你想查看完整的项目代码，可以<a href="https://github.com/tianqing370687/SpringMVCRookie/tree/dev-mybatis" target="_blank" rel="external">点击链接(SpringMVCRookie-dev-mybatis)</a></p>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p><a href="http://www.mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="external"><font color="#87CEFA">mybatis</font></a><br><a href="http://www.mybatis.org/spring/zh/index.html" target="_blank" rel="external"><font color="#87CEFA">mybatis-spring</font></a></p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-07-16</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_008.webp&quot; alt=&quot;https://tuchong.com/1453100/13582509/&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring MVC菜鸟之旅" scheme="http://yoursite.com/categories/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85/"/>
    
    
  </entry>
  
  <entry>
    <title>[Spring MVC菜鸟之旅] Spring Data Redis整合</title>
    <link href="http://yoursite.com/2016/07/09/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85-Spring-Data-Redis%E6%95%B4%E5%90%88/"/>
    <id>http://yoursite.com/2016/07/09/Spring-MVC菜鸟之旅-Spring-Data-Redis整合/</id>
    <published>2016-07-08T16:01:16.000Z</published>
    <updated>2017-07-15T03:24:01.862Z</updated>
    
    <content type="html"><![CDATA[<p>The Spring Framework is the leading full-stack Java/JEE application framework. It provides a lightweight container and a non-invasive programming model enabled by the use of dependency injection, AOP, and portable service abstractions.<br>NoSQL storages provide an alternative to classical RDBMS for horizontal scalability and speed. In terms of implementation, Key Value stores represent one of the largest (and oldest) members in the NoSQL space.<br>The Spring Data Redis (or SDR) framework makes it easy to write Spring applications that use the Redis key value store by eliminating the redundant tasks and boiler plate code required for interacting with the store through Spring’s excellent infrastructure support.<br><a id="more"></a></p>
<h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><h3 id="使用Redis"><a href="#使用Redis" class="headerlink" title="使用Redis"></a>使用Redis</h3><blockquote>
<p>此处简单介绍一下Linux下得Redis安装，windows比较麻烦没有尝试</p>
</blockquote>
<h4 id="下载、解压并编译Redis文件"><a href="#下载、解压并编译Redis文件" class="headerlink" title="下载、解压并编译Redis文件"></a>下载、解压并编译Redis文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wget http://download.redis.io/releases/redis-3.2.4.tar.gz</div><div class="line">$ tar xzf redis-3.2.4.tar.gz</div><div class="line">$ cd redis-3.2.4</div><div class="line">$ make</div></pre></td></tr></table></figure>
<h4 id="运行redis-server"><a href="#运行redis-server" class="headerlink" title="运行redis-server"></a>运行redis-server</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo ./src/redis-server</div></pre></td></tr></table></figure>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_014.png" alt=""></p>
<h4 id="启动Redis客户端"><a href="#启动Redis客户端" class="headerlink" title="启动Redis客户端"></a>启动Redis客户端</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo ./src/redis-cli</div></pre></td></tr></table></figure>
<h3 id="Redis-数据类型"><a href="#Redis-数据类型" class="headerlink" title="Redis 数据类型"></a>Redis 数据类型</h3><p>Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。</p>
<h4 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h4><p>string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。<br>string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。<br>string类型是Redis最基本的数据类型，一个键最大能存储512MB。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; set name &quot;runoob&quot;</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get name</div><div class="line">&quot;runoob&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
<h4 id="Hash（哈希）"><a href="#Hash（哈希）" class="headerlink" title="Hash（哈希）"></a>Hash（哈希）</h4><p>Redis hash 是一个键值对集合。<br>Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; hmset user:1 username runoob password runoob points 200</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; hgetall user:1</div><div class="line">1) &quot;username&quot;</div><div class="line">2) &quot;runoob&quot;</div><div class="line">3) &quot;password&quot;</div><div class="line">4) &quot;runoob&quot;</div><div class="line">5) &quot;points&quot;</div><div class="line">6) &quot;200&quot;</div></pre></td></tr></table></figure>
<p>以上实例中 hash 数据类型存储了包含用户脚本信息的用户对象。 实例中我们使用了 Redis HMSET, HGETALL 命令，user:1 为键值。<br>每个 hash 可以存储 2<sup>32</sup> -1 键值对（40多亿）。</p>
<h4 id="List（列表）"><a href="#List（列表）" class="headerlink" title="List（列表）"></a>List（列表）</h4><p>Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; lpush runoob redis</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; lpush runoob mongodb</div><div class="line">(integer) 2</div><div class="line">127.0.0.1:6379&gt; lpush runoob rabitmq</div><div class="line">(integer) 3</div><div class="line">127.0.0.1:6379&gt; lrange runoob 0 10</div><div class="line">1) &quot;rabitmq&quot;</div><div class="line">2) &quot;mongodb&quot;</div><div class="line">3) &quot;redis&quot;</div></pre></td></tr></table></figure>
<p>列表最多可存储 2<sup>32</sup> - 1 元素 (4294967295, 每个列表可存储40多亿)。</p>
<h4 id="Set（集合）"><a href="#Set（集合）" class="headerlink" title="Set（集合）"></a>Set（集合）</h4><p>Redis的Set是string类型的无序集合。<br>集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。</p>
<h5 id="sadd命令"><a href="#sadd命令" class="headerlink" title="sadd命令"></a>sadd命令</h5><p>添加一个string元素到,key对应的set集合中，成功返回1,如果元素已经在集合中返回0,key对应的set不存在返回错误。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sadd key member</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; sadd runoobs redis</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; sadd runoobs mongodb</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; sadd runoobs rabitmq</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; sadd runoobs rabitmq</div><div class="line">(integer) 0</div><div class="line">127.0.0.1:6379&gt; smembers runoobs</div><div class="line">1) &quot;rabitmq&quot;</div><div class="line">2) &quot;mongodb&quot;</div><div class="line">3) &quot;redis&quot;</div></pre></td></tr></table></figure>
<p>注意：以上实例中 rabitmq 添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略。<br>集合中最大的成员数为 2<sup>32</sup> - 1(4294967295, 每个集合可存储40多亿个成员)。</p>
<h4 id="zset-sorted-set-有序集合"><a href="#zset-sorted-set-有序集合" class="headerlink" title="zset(sorted set : 有序集合)"></a>zset(sorted set : 有序集合)</h4><p>Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。<br>不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。<br>zset的成员是唯一的,但分数(score)却可以重复。</p>
<h5 id="zadd命令"><a href="#zadd命令" class="headerlink" title="zadd命令"></a>zadd命令</h5><p>添加元素到集合，元素在集合中存在则更新对应score</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zadd key score member</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; zadd runoobz 0 redis</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; zadd runoobz 0 mongodb</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; zadd runoobz 0 rabitmaq</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; zadd runoobz 0 rabitmaq</div><div class="line">(integer) 0</div><div class="line">127.0.0.1:6379&gt; zrangebyscore runoobz 0 10</div><div class="line">1) &quot;mongodb&quot;</div><div class="line">2) &quot;rabitmaq&quot;</div><div class="line">3) &quot;redis&quot;</div></pre></td></tr></table></figure>
<h2 id="整合Spring-Data-Redis"><a href="#整合Spring-Data-Redis" class="headerlink" title="整合Spring Data Redis"></a>整合Spring Data Redis</h2><p>Spring Redis要求Redis的版本不低于2.6，Java SE版本不低于6.0，在语言绑定（连接器）方面，Spring Redis集成了Jedis，JRedis，SRP和Lettuce四个流行的Redis方面的Java库。</p>
<h3 id="添加相关文件"><a href="#添加相关文件" class="headerlink" title="添加相关文件"></a>添加相关文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="配置RedisConnectionFactory"><a href="#配置RedisConnectionFactory" class="headerlink" title="配置RedisConnectionFactory"></a>配置RedisConnectionFactory</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"poolConfig"</span> <span class="attr">class</span>=<span class="string">"redis.clients.jedis.JedisPoolConfig"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.maxIdle&#125;"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxTotal"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.maxTotal&#125;"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWaitMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.maxWaitMillis&#125;"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- Jedis ConnectionFactory --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jedisConnectionFactory"</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.connection.jedis.JedisConnectionFactory"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hostName"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.hostname&#125;"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"port"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.port&#125;"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeout"</span> <span class="attr">value</span>=<span class="string">"$&#123;redis.timeout&#125;"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"usePool"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolConfig"</span> <span class="attr">ref</span>=<span class="string">"poolConfig"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="通过RedisTemplate使用对象"><a href="#通过RedisTemplate使用对象" class="headerlink" title="通过RedisTemplate使用对象"></a>通过RedisTemplate使用对象</h3><p>Most users are likely to use RedisTemplate and its coresponding package org.springframework.data.redis.core - the template is in fact the central class of the Redis module due to its rich feature set. The template offers a high-level abstraction for Redis interactions. While RedisConnection offers low level methods that accept and return binary values (byte arrays), the template takes care of serialization and connection management, freeing the user from dealing with such details.</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- Serializer --&gt;</span></div><div class="line"><span class="comment">&lt;!-- 如果不配置Serializer，那么存储的时候只能使用String，如果存储其他类型的对象，将会提示错误--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"keySerializer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.serializer.StringRedisSerializer"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"valueSerializer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.serializer.StringRedisSerializer"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- redis template definition --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"redisTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.data.redis.core.RedisTemplate"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionFactory"</span> <span class="attr">ref</span>=<span class="string">"jedisConnectionFactory"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"keySerializer"</span> <span class="attr">ref</span>=<span class="string">"keySerializer"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"valueSerializer"</span> <span class="attr">ref</span>=<span class="string">"valueSerializer"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<p>RedisTemplate uses a Java-based serializer for most of its operations. This means that any object written or read by the template will be serialized/deserialized through Java. The serialization mechanism can be easily changed on the template, and the Redis module offers several implementations available in the org.springframework.data.redis.serializer package - see Serializers for more information. You can also set any of the serializers to null and use RedisTemplate with raw byte arrays by setting the enableDefaultSerializer property to false. Note that the template requires all keys to be non-null - values can be null as long as the underlying serializer accepts them; read the javadoc of each serializer for more information.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.springmvc.niklaus.dao.Impl;</div><div class="line"></div><div class="line"><span class="meta">@Repository</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDAOImpl</span> <span class="keyword">implements</span> <span class="title">TestDAO</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Resource</span></div><div class="line">    <span class="keyword">private</span> RedisTemplate&lt;String,String&gt; redisTemplate;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rSave</span><span class="params">(String key,String value)</span></span>&#123;</div><div class="line">        redisTemplate.opsForValue().set(key,value);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">rGet</span><span class="params">(String key)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().get(key);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p><a href="http://redis.io/" target="_blank" rel="external"><font color="#87CEFA">Redis</font></a><br><a href="http://docs.spring.io/spring-data/redis/docs/current/reference/html/" target="_blank" rel="external"><font color="#87CEFA">Spring Data Redis</font></a><br><a href="http://docs.spring.io/spring-data/redis/docs/current/api/org/springframework/data/redis/core/RedisTemplate.html" target="_blank" rel="external"><font color="#87CEFA">Spring Data Redis - API</font></a><br><a href="http://projects.spring.io/spring-data-redis/" target="_blank" rel="external"><font color="#87CEFA">Spring Data Redis - Projects</font></a></p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-07-09</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The Spring Framework is the leading full-stack Java/JEE application framework. It provides a lightweight container and a non-invasive programming model enabled by the use of dependency injection, AOP, and portable service abstractions.&lt;br&gt;NoSQL storages provide an alternative to classical RDBMS for horizontal scalability and speed. In terms of implementation, Key Value stores represent one of the largest (and oldest) members in the NoSQL space.&lt;br&gt;The Spring Data Redis (or SDR) framework makes it easy to write Spring applications that use the Redis key value store by eliminating the redundant tasks and boiler plate code required for interacting with the store through Spring’s excellent infrastructure support.&lt;br&gt;
    
    </summary>
    
      <category term="Spring MVC菜鸟之旅" scheme="http://yoursite.com/categories/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85/"/>
    
    
  </entry>
  
  <entry>
    <title>[Spring MVC菜鸟之旅] 通过配置文件分析Spring MVC与Hibernate的整合</title>
    <link href="http://yoursite.com/2016/07/03/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85-%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90Spring-MVC%E4%B8%8EHibernate%E7%9A%84%E6%95%B4%E5%90%88/"/>
    <id>http://yoursite.com/2016/07/03/Spring-MVC菜鸟之旅-通过配置文件分析Spring-MVC与Hibernate的整合/</id>
    <published>2016-07-02T16:00:28.000Z</published>
    <updated>2017-07-15T03:08:49.869Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_007.jpg" alt="https://tuchong.com/1813132/14953443/#image17736761"><br><a id="more"></a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>当使用Spring开发持久层的时候，我们会面临多种选择。我们可以使用JDBC、Hibernate、MyBatis或其他任意的持久化框架。在这里简单介绍一下使用Hibernate作为持久化框架。</p>
<h2 id="Spring的数据访问哲学"><a href="#Spring的数据访问哲学" class="headerlink" title="Spring的数据访问哲学"></a>Spring的数据访问哲学</h2><p>Spring的目标之一就是允许开发人员在开发应用程序时，能够遵循面向对象（OO）原则中的“针对接口编程”。Spring对数据访问的支持也不例外。<br>DAO是<strong>数据访问对象</strong>（data access object）的缩写。DAO提供了数据读取和写入到数据库中的一种方式。它们应该以接口的方式发布功能，而应用程序的其他部分就可以通过接口来进行访问。下图展现了设计数据访问层的合理方式。</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_013.png" alt=""></p>
<p>如上图所示，服务对象通过接口来访问DAO。这样的好处有:<br>(1) 服务对象易于测试，因为它们不再与特定的数据访问实现绑定在一起。<br>(2) 数据访问层是以持久化技术无关的方式来进行访问。持久化方式的选择独立于DAO，只要相关的数据访问方法通过接口来进行发布。这可以实现灵活的设计并使得切换持久化框架对应用程序其他部分所带来的影响最小。如果将数据层的实现细节渗透到应用程序的其他部分中，那么整个应用程序将于数据访问层耦合在一起，从而导致僵化的设计。</p>
<h2 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h2><p>Spring提供了在Spring上下文中配置数据源Bean的多种方式，包括：<br>(1) 通过JDBC驱动程序定义的数据源；<br>(2) 通过JNDI查找的数据源；<br>(3) 连接池的数据源<br>对于即将发布到生产环境中的应用程序，我建议使用从连接池获取连接的数据源。<br>我们把所有有关于Hibernate的配置都放置在resource目录下spring-db.xml的文件上</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 配置数据源 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span></span></div><div class="line">      <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.url&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.username&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.password&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minPoolSize"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.min&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolSize"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.max&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialPoolSize"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.init&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxStatements"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.maxStatements&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdleTime"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.maxIdleTime&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"idleConnectionTestPeriod"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.idleConnectionTestPeriod&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"acquireRetryAttempts"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.acquireRetryAttempts&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"breakAfterAcquireFailure"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.breakAfterAcquireFailure&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testConnectionOnCheckout"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.testConnectionOnCheckout&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="在Spring中集成Hibernate"><a href="#在Spring中集成Hibernate" class="headerlink" title="在Spring中集成Hibernate"></a>在Spring中集成Hibernate</h2><h3 id="声明Hibernate的Session工厂"><a href="#声明Hibernate的Session工厂" class="headerlink" title="声明Hibernate的Session工厂"></a>声明Hibernate的Session工厂</h3><p>以前，在Spring应用程序中使用的Hibernate是通过HibernateTemplate进行的，它简化了Hibernate的繁琐工作，它的职责之一是管理Hibernate的Session。这涉及打开和关闭Session并确保每个事务使用相同的Session。HibernateTemplate的不足之处在于存在一定程度的侵入性。但我们在DAO中使用HibernateTemplate（不管直接使用还是通过HibernateDaoSupport）时，DAO类都会与SpringAPI产生耦合。</p>
<p>Hibernate3引入了<strong>上下文Session</strong>（Contextual session），这是Hibernate本身所提供的保证每个事务使用同一Session的方案。这种方式能够让你的DAO类不包含特定的Spring代码。我在《[Spring MVC菜鸟之旅] Spring MVC 与 Hibernate整合》中就是使用HibernateTemplate，但鉴于上下文Session是使用Hibernate的最佳实践，所以下面的介绍将只关注上下文Session。</p>
<p>使用Hibernate的主要接口实org.hibernate.Session。Session接口提供了基本的数据访问功能，通过Hibernate的Session接口，应用程序的DAO能够满足所有的持久化需求。</p>
<p>获取Hibernate Session对象的标准方式是借助Hibernate的SessionFactory接口的实现类。除了一些其他的任务，SessionFactory主要负责Hibernate Session的打开。关闭以及管理。</p>
<p>在Spring中我们通过SPring的某一个Hibernate Session工厂Bean来获取Hibernate的SessionFactory。我们可以在应用程序的Spring上下文中，像配置其他Bean那样来配置Hibernate Session工厂。在配置Hibernate Session工厂的Bean的时候，我们一般在持久化域对象是通过XML来进行配置的。当选在XML中定义对象与数据库之间的映射，需要在Spring中配置LocalSessionFactoryBean（若更倾向使用注解的方式来定义持久化的话，需要使用AnnotationSessionFactoryBean配置）</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.hibernate4.LocalSessionFactoryBean"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernateProperties"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dialect"</span>&gt;</span></div><div class="line">                org.hibernate.dialect.MySQLDialect</div><div class="line">            <span class="tag">&lt;/<span class="name">prop</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.show_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.hbm2ddl.auto"</span>&gt;</span>none<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"packagesToScan"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.niklaus.springmvc.pojo<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<p>使用packagesToScan属性告诉Spring扫描一个或多个包以查找域类，这些类通过注解方式来表明要使用Hibernate进行持久化。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"packagesToScan"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.niklaus.springmvc.pojo<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div></pre></td></tr></table></figure>
<p>因为我只需要扫描一个包，所以我使用了一个内部的属性编辑器将单个的String自动转换为String数组。</p>
<h3 id="构建不依赖于Spring的Hibernate代码"><a href="#构建不依赖于Spring的Hibernate代码" class="headerlink" title="构建不依赖于Spring的Hibernate代码"></a>构建不依赖于Spring的Hibernate代码</h3><p>在Spring应用上下文中配置Hibernate Session工厂Bean后，可以准备创建自己的DAO类了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Repository</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDAOImpl</span> <span class="keyword">implements</span> <span class="title">TestDAO</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> SessionFactory sessionFactory;</div><div class="line"></div><div class="line">    <span class="comment">//构造DAO</span></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDAOImpl</span><span class="params">(SessionFactory sessionFactory)</span></span>&#123;</div><div class="line">        <span class="keyword">this</span>.sessionFactory = sessionFactory;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addTest</span><span class="params">(Test test)</span> </span>&#123;</div><div class="line">        Session session = sessionFactory.openSession();</div><div class="line">        Transaction tx = session.beginTransaction();</div><div class="line">        session.save(test);</div><div class="line">        tx.commit();</div><div class="line">        session.close();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Test <span class="title">getTestById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</div><div class="line">        Session session = sessionFactory.openSession();</div><div class="line">        Test test = (Test) session.get(Test.class,id);</div><div class="line">        session.close();</div><div class="line">        <span class="keyword">return</span> test;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateTest</span><span class="params">(Test test)</span> </span>&#123;</div><div class="line">        Session session = sessionFactory.openSession();</div><div class="line">        Transaction tx = session.beginTransaction();</div><div class="line">        session.update(test);</div><div class="line">        tx.commit();</div><div class="line">        session.close();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="事务管理"><a href="#事务管理" class="headerlink" title="事务管理"></a>事务管理</h2><p>在软件开发领域，全有或全无的操作被称为<strong>事务</strong>（transaction）。事务允许你讲几个操作组合成一个要么全部发生要么全部不发生的工作单元。如果一切顺利，事务将会成功。但是有任何一件事情出错的话，所发生的行为将会被清除干净，就像什么事情都没有发生一样。</p>
<h3 id="事务特性（ACID）"><a href="#事务特性（ACID）" class="headerlink" title="事务特性（ACID）"></a>事务特性（ACID）</h3><h4 id="原子性（Atomic）"><a href="#原子性（Atomic）" class="headerlink" title="原子性（Atomic）"></a>原子性（Atomic）</h4><p>事务是由一个或多个活动所组成的一个工作单元。原子性确保食物中的所有操作全部发生或者全部不发生。如果所有活动都成功了，事务也就成功了。如果任意一个活动失败了，整个事务也失败并回滚。</p>
<h4 id="一致性（Consistent）"><a href="#一致性（Consistent）" class="headerlink" title="一致性（Consistent）"></a>一致性（Consistent）</h4><p>一旦事务完成（不管成功还是失败），系统必须确保它所建模的业务处于一致的状态。现实的数据不应该被损坏。</p>
<h4 id="隔离性（Isolated）"><a href="#隔离性（Isolated）" class="headerlink" title="隔离性（Isolated）"></a>隔离性（Isolated）</h4><p>事务允许多个用户对相同的数据进行操作，每个用户的操作不会与其他用户纠缠在一起。因此，事务应该被彼此隔离，避免发生同步读写相同数据的事情（注意的是，隔离性往往涉及到锁定数据库中的行或表）。</p>
<h4 id="持久性（Durable）"><a href="#持久性（Durable）" class="headerlink" title="持久性（Durable）"></a>持久性（Durable）</h4><p>一旦事务完成，事务的结果应该持久化，这样就能从任何的系统崩溃中会发过来。这一般会设计将结果存储到数据库或者其他形式的持久化存储中。</p>
<h3 id="使用Hibernate事务管理器"><a href="#使用Hibernate事务管理器" class="headerlink" title="使用Hibernate事务管理器"></a>使用Hibernate事务管理器</h3><p>如果应用程序的持久化是通过Hibernate实现的，那么久需要使用HibernateTransactionManager。需要在Spring上下文定义中添加如下的声明：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.hibernate4.HibernateTransactionManager"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sessionFactory"</span> <span class="attr">ref</span>=<span class="string">"sessionFactory"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<p>HibernateTransactionManager将事务管理的职责委托给org.hibernate.Transaction对象，而后者是从Hibernate Session中获取到的。当事务成功完成时，HibernateTransactionManager将会调用Transaction对象的commit()方法。类似地，如果事务失败，Transaction对象的rollback()方法将会被调用。</p>
<h3 id="声明式事务"><a href="#声明式事务" class="headerlink" title="声明式事务"></a>声明式事务</h3><h4 id="在XML中定义事务"><a href="#在XML中定义事务" class="headerlink" title="在XML中定义事务"></a>在XML中定义事务</h4><p>Spring为POJO提供了声明式事务的支持，它是通过Spring AOP框架实现的。Spring提供了3种方式来声明事务式边界，包括Spring AOP和TransactionProxyFactory的代理Bean来实现声明式事务，但自从Spring 2.0，声明事务的更好方式是使用Spring的tx命名空间和@Transactional注解。<br>使用tx命名空间会涉及将其添加到Spring XML配置文件中：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></div><div class="line">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></div><div class="line">       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd</div><div class="line">       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</div><div class="line">"&gt;</div></pre></td></tr></table></figure>
<p>要注意的是，aop命名空间也应该包括在内。这是很重要的，因为有一些声明式事务配置元素依赖于部分Spring的AOP配置元素。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 定义方法的过滤规则 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 所有方法都使用事务 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></div></pre></td></tr></table></figure>
<p>当使用来声明事务时，还需要一个事务管理器。根据约定优于配置，假定事务管理器被声明为一个id为transactionManager的Bean。如果碰巧为事务管理配置器配置了一个不同的id，则需要在transactionmanager属性中明确指定事务管理器的id。</p>
<p>只是定义了AOP通知，用于吧事务边界通知给方法。但是这只是事务通知，而不是完整的事务性切面。我们在中没有声明哪些Bean应该被通知—我们需要一个切点来做这件事。为了完整定义事务性切面，我们必须定义一个通知器（advisor）。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 定义一个切入点 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"services"</span> <span class="attr">expression</span>=<span class="string">"execution (* com.springmvc.niklaus.service.*Service.*(..))"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"services"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这里的pointcut属性使用了AspectJ切入点表达式来表明通知器适用于哪些方法。哪些方法应该真正运行在事务中以及方法的事务属性都是由这个事务通知来定义的，而事务通知是advice-ref属性来制定的，它引用了名为txAdvice的通知。</p>
<h4 id="定义注解驱动的事务"><a href="#定义注解驱动的事务" class="headerlink" title="定义注解驱动的事务"></a>定义注解驱动的事务</h4><p>除了元素，tx命名空间还提供了元素，使用时，通常只需要一行XML：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>/&gt;</span></div></pre></td></tr></table></figure>
<p>通过transaction-manager属性（默认值为transactionManager）来制定特定的事务管理器。</p>
<p>元素告诉Spring检索上下文中所有的Bean并查找使用@Transactional注解的Bean，而不管这个注解使用在类级别上还是方法级别上。对于每一个使用@Transactional注解的Bean，都会自动为它添加事务通知。通知的事务属性是通过@Transactional注解的参数来定义的。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>github地址 <a href="https://github.com/tianqing370687/SpringMVCRookie.git" target="_blank" rel="external">SpringMVCRookie</a></p>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p>《spring实战(第三版)》</p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-07-03</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_007.jpg&quot; alt=&quot;https://tuchong.com/1813132/14953443/#image17736761&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring MVC菜鸟之旅" scheme="http://yoursite.com/categories/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85/"/>
    
    
  </entry>
  
  <entry>
    <title>[Spring MVC菜鸟之旅] Spring MVC 与 Hibernate整合</title>
    <link href="http://yoursite.com/2016/07/02/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85-Spring-MVC-%E4%B8%8E-Hibernate%E6%95%B4%E5%90%88/"/>
    <id>http://yoursite.com/2016/07/02/Spring-MVC菜鸟之旅-Spring-MVC-与-Hibernate整合/</id>
    <published>2016-07-02T15:58:56.000Z</published>
    <updated>2017-07-15T02:59:32.102Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_006.jpg" alt=""><br><a id="more"></a></p>
<h2 id="应用结构"><a href="#应用结构" class="headerlink" title="应用结构"></a>应用结构</h2><p>先贴上一张本文最终运行成功的Spring MVC程序的结构图</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_010.png" alt=""></p>
<h2 id="配置项目"><a href="#配置项目" class="headerlink" title="配置项目"></a>配置项目</h2><h3 id="使用Maven导入SpringMVC所依赖的包，修改pom-xml文件"><a href="#使用Maven导入SpringMVC所依赖的包，修改pom-xml文件" class="headerlink" title="使用Maven导入SpringMVC所依赖的包，修改pom.xml文件"></a>使用Maven导入SpringMVC所依赖的包，修改pom.xml文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></div><div class="line">  http://maven.apache.org/POM/4.0.0</div><div class="line">  http://maven.apache.org/maven-v4_0_0.xsd"&gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.nicklaus.springmvc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>springmvc Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.3.0.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">hibernate.version</span>&gt;</span>4.3.11.Final<span class="tag">&lt;/<span class="name">hibernate.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.29<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">c3p0.version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">c3p0.version</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Spring start --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Spring end --&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--hibernate--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hibernate.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--数据库连接池C3P0--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;c3p0.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- Mysql--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- jstl for jsp page --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.2.1.v20140609<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="修改WEB-INF下的web-xml"><a href="#修改WEB-INF下的web-xml" class="headerlink" title="修改WEB-INF下的web.xml"></a>修改WEB-INF下的web.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee</span></div><div class="line">         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</div><div class="line">         <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>SpringMVCDemo<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- 配置spring应用上下文 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span></div><div class="line">      classpath:applicationContext.xml</div><div class="line">    <span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- 配置spring核心servlet --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:dispatcher-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- 过滤器 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="保持之前dispatcher-servlet-xml内容不变"><a href="#保持之前dispatcher-servlet-xml内容不变" class="headerlink" title="保持之前dispatcher-servlet.xml内容不变"></a>保持之前dispatcher-servlet.xml内容不变</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></div><div class="line">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></div><div class="line">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class="line">       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd</div><div class="line">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd "&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 处理静态资源 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"resources"</span> <span class="attr">mapping</span>=<span class="string">"/resources/**"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.niklaus.springmvc"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="在resource目录下创建applicationContext-xml文件"><a href="#在resource目录下创建applicationContext-xml文件" class="headerlink" title="在resource目录下创建applicationContext.xml文件"></a>在resource目录下创建applicationContext.xml文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></div><div class="line">                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"propertyConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"locations"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:dev/config.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"spring-db.xml"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="在resource目录下创建spring-db-xml文件"><a href="#在resource目录下创建spring-db-xml文件" class="headerlink" title="在resource目录下创建spring-db.xml文件"></a>在resource目录下创建spring-db.xml文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></div><div class="line">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></div><div class="line">       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd</div><div class="line">       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</div><div class="line">"&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 配置数据源 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span></span></div><div class="line">          <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.url&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.username&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.password&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minPoolSize"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.min&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolSize"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.max&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialPoolSize"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.init&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxStatements"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.maxStatements&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdleTime"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.maxIdleTime&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"idleConnectionTestPeriod"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.idleConnectionTestPeriod&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"acquireRetryAttempts"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.acquireRetryAttempts&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"breakAfterAcquireFailure"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.breakAfterAcquireFailure&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testConnectionOnCheckout"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;jdbc.pool.testConnectionOnCheckout&#125;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.hibernate4.LocalSessionFactoryBean"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernateProperties"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dialect"</span>&gt;</span></div><div class="line">                    org.hibernate.dialect.MySQLDialect</div><div class="line">                <span class="tag">&lt;/<span class="name">prop</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.show_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.hbm2ddl.auto"</span>&gt;</span>none<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"packagesToScan"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.niklaus.springmvc.pojo<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"hibernateTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.hibernate4.HibernateTemplate"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sessionFactory"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"sessionFactory"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 定义事务管理器 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.hibernate4.HibernateTransactionManager"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sessionFactory"</span> <span class="attr">ref</span>=<span class="string">"sessionFactory"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 定义方法的过滤规则 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 所有方法都使用事务 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 定义一个切入点 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"services"</span> <span class="attr">expression</span>=<span class="string">"execution (* com.niklaus.springmvc.service.*Service.*(..))"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"services"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<p>将配置数据源的配置信息写入config.properties文件中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#mysql configuration</div><div class="line">jdbc.url=jdbc\:mysql\://10.1.1.00\:3306/xxxxx?autoReconnect\=true&amp;useUnicode\=true&amp;characterEncoding\=UTF-8</div><div class="line">jdbc.username=root</div><div class="line">jdbc.password=</div><div class="line">jdbc.pool.min=5</div><div class="line">jdbc.pool.max=50</div><div class="line">jdbc.pool.maxIdleTime=180</div><div class="line">jdbc.pool.init=5</div><div class="line">jdbc.pool.idleConnectionTestPeriod=1800</div><div class="line">jdbc.pool.maxStatements=100</div><div class="line">jdbc.pool.acquireRetryAttempts=30</div><div class="line">jdbc.pool.breakAfterAcquireFailure=false</div><div class="line">jdbc.pool.testConnectionOnCheckout=false</div></pre></td></tr></table></figure>
<h2 id="编写数据交互的代码"><a href="#编写数据交互的代码" class="headerlink" title="编写数据交互的代码"></a>编写数据交互的代码</h2><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`auth_user`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">`username`</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`email`</span> <span class="built_in">VARCHAR</span>(<span class="number">75</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`password`</span> <span class="built_in">VARCHAR</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`last_login`</span> DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`date_joined`</span> DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</div><div class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> <span class="string">`username`</span> (<span class="string">`username`</span>)</div><div class="line">)</div></pre></td></tr></table></figure>
<h3 id="Pojo"><a href="#Pojo" class="headerlink" title="Pojo"></a>Pojo</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.niklaus.springmvc.pojo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.persistence.Column;</div><div class="line"><span class="keyword">import</span> javax.persistence.Entity;</div><div class="line"><span class="keyword">import</span> javax.persistence.Id;</div><div class="line"><span class="keyword">import</span> javax.persistence.Table;</div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by nicholas.chi on 2016/7/2.</div><div class="line"> */</div><div class="line"><span class="meta">@Entity</span></div><div class="line"><span class="meta">@Table</span>(name = <span class="string">"auth_user"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</div><div class="line">    <span class="keyword">private</span> String userName;</div><div class="line">    <span class="keyword">private</span> String email;</div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line">    <span class="keyword">private</span> Date lastLogin;</div><div class="line">    <span class="keyword">private</span> Date dateJoined;</div><div class="line"></div><div class="line">    <span class="meta">@Id</span></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"id"</span>, unique = <span class="keyword">true</span>, nullable = <span class="keyword">false</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"username"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> userName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.userName = userName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"email"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> email;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.email = email;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"password"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> password;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.password = password;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"last_login"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getLastLogin</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lastLogin;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLastLogin</span><span class="params">(Date lastLogin)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.lastLogin = lastLogin;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(name = <span class="string">"date_joined"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getDateJoined</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> dateJoined;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDateJoined</span><span class="params">(Date dateJoined)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.dateJoined = dateJoined;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"Test&#123;"</span> +</div><div class="line">                <span class="string">"id="</span> + id +</div><div class="line">                <span class="string">", userName='"</span> + userName + <span class="string">'\''</span> +</div><div class="line">                <span class="string">", email='"</span> + email + <span class="string">'\''</span> +</div><div class="line">                <span class="string">", password='"</span> + password + <span class="string">'\''</span> +</div><div class="line">                <span class="string">", lastLogin="</span> + lastLogin +</div><div class="line">                <span class="string">", dateJoined="</span> + dateJoined +</div><div class="line">                <span class="string">'&#125;'</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Dao层"><a href="#Dao层" class="headerlink" title="Dao层"></a>Dao层</h3><p>接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.niklaus.springmvc.dao;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.niklaus.springmvc.pojo.Test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by nicholas.chi on 2016/7/2.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TestDao</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">(Test test)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">(Test test)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">(Test test)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Test <span class="title">getTestById</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;Test&gt; <span class="title">getAll</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.niklaus.springmvc.dao.Impl;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.niklaus.springmvc.dao.TestDao;</div><div class="line"><span class="keyword">import</span> com.niklaus.springmvc.pojo.Test;</div><div class="line"><span class="keyword">import</span> org.springframework.orm.hibernate4.HibernateTemplate;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.annotation.Resource;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by nicholas.chi on 2016/7/2.</div><div class="line"> */</div><div class="line"><span class="meta">@Repository</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDaoImpl</span> <span class="keyword">implements</span> <span class="title">TestDao</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Resource</span></div><div class="line">    HibernateTemplate hibernateTemplate;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">(Test test)</span> </span>&#123;</div><div class="line">        hibernateTemplate.save(test);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">(Test test)</span> </span>&#123;</div><div class="line">        hibernateTemplate.delete(test);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">(Test test)</span> </span>&#123;</div><div class="line">        hibernateTemplate.update(test);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Test <span class="title">getTestById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</div><div class="line">        Test test = hibernateTemplate.get(Test.class,id);</div><div class="line">        <span class="keyword">return</span> test;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;Test&gt; <span class="title">getAll</span><span class="params">()</span> </span>&#123;</div><div class="line">        List&lt;?&gt; list = hibernateTemplate.find(<span class="string">"from Test where id &gt; 0"</span>);</div><div class="line">        <span class="keyword">return</span> (List&lt;Test&gt;)list;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Service层"><a href="#Service层" class="headerlink" title="Service层"></a>Service层</h3><p>接口<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.niklaus.springmvc.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.niklaus.springmvc.pojo.Test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by nicholas.chi on 2016/7/2.</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TestService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;Test&gt; <span class="title">getAllUser</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">(Test test)</span></span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>实现<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.niklaus.springmvc.service.Impl;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.niklaus.springmvc.dao.TestDao;</div><div class="line"><span class="keyword">import</span> com.niklaus.springmvc.pojo.Test;</div><div class="line"><span class="keyword">import</span> com.niklaus.springmvc.service.TestService;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by nicholas.chi on 2016/7/2.</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServiceImpl</span> <span class="keyword">implements</span> <span class="title">TestService</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    TestDao testDao;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;Test&gt; <span class="title">getAllUser</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> testDao.getAll();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">(Test test)</span> </span>&#123;</div><div class="line">        testDao.testAdd(test);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Controller层"><a href="#Controller层" class="headerlink" title="Controller层"></a>Controller层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.niklaus.springmvc.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.niklaus.springmvc.pojo.Test;</div><div class="line"><span class="keyword">import</span> com.niklaus.springmvc.service.TestService;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by nicholas.chi on 2016/7/2.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    TestService testService;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value=<span class="string">"/test"</span>,method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</div><div class="line">        List&lt;Test&gt; list = testService.getAllUser();</div><div class="line"></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;list.size();i++)&#123;</div><div class="line">            System.out.println(<span class="string">"Test Num : "</span>+i);</div><div class="line">            System.out.println(<span class="string">"Test content : "</span>+list.get(i).toString());</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value=<span class="string">"/testAdd"</span>,method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testAdd</span><span class="params">()</span></span>&#123;</div><div class="line">        Test test = <span class="keyword">new</span> Test();</div><div class="line">        test.setUserName(<span class="string">"Tests"</span>);</div><div class="line">        test.setEmail(<span class="string">"test@teat.com"</span>);</div><div class="line">        test.setPassword(<span class="string">"XXXXXXXXXXXXXXXXXXXXXX"</span>);</div><div class="line">        test.setDateJoined(<span class="keyword">new</span> Date());</div><div class="line">        test.setLastLogin(<span class="keyword">new</span> Date());</div><div class="line">        testService.addUser(test);</div><div class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="效果验证"><a href="#效果验证" class="headerlink" title="效果验证"></a>效果验证</h2><p>在浏览器中访问<a href="http://localhost:10086/springmvc/test，会发现IDE的Console会打印如下信息：" target="_blank" rel="external">http://localhost:10086/springmvc/test，会发现IDE的Console会打印如下信息：</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Hibernate: select test0_.id as id1_0_, test0_.date_joined as date_joi2_0_, test0_.email as email3_0_, test0_.last_login as last_log4_0_, test0_.password as password5_0_, test0_.username as username6_0_ from auth_user test0_ where test0_.id&gt;0</div><div class="line">Test Num : 0</div><div class="line">Test content : Test&#123;id=1, userName=&apos;kerry&apos;, email=&apos;kerry.liu@yuyutechnology.com&apos;, password=&apos;e10adc3949ba59abbe56e057f20f883e&apos;, lastLogin=2016-02-03 14:48:12.0, dateJoined=2016-02-02 18:23:13.0&#125;</div><div class="line">Test Num : 1</div><div class="line">Test content : Test&#123;id=2, userName=&apos;a&apos;, email=&apos;a@a.com&apos;, password=&apos;e10adc3949ba59abbe56e057f20f883e&apos;, lastLogin=2016-02-03 14:38:22.0, dateJoined=2016-02-03 11:29:23.0&#125;</div><div class="line">Test Num : 2</div><div class="line">Test content : Test&#123;id=3, userName=&apos;b&apos;, email=&apos;b@b.com&apos;, password=&apos;e10adc3949ba59abbe56e057f20f883e&apos;, lastLogin=2016-02-03 11:48:30.0, dateJoined=2016-02-03 11:48:30.0&#125;</div><div class="line">Test Num : 3</div><div class="line">Test content : Test&#123;id=4, userName=&apos;test&apos;, email=&apos;test@test.com&apos;, password=&apos;e10adc3949ba59abbe56e057f20f883e&apos;, lastLogin=2016-02-03 12:04:32.0, dateJoined=2016-02-03 12:03:29.0&#125;</div><div class="line">Test Num : 4</div><div class="line">Test content : Test&#123;id=5, userName=&apos;test2&apos;, email=&apos;test2@test.com&apos;, password=&apos;e10adc3949ba59abbe56e057f20f883e&apos;, lastLogin=2016-02-03 12:07:00.0, dateJoined=2016-02-03 12:07:00.0&#125;</div><div class="line">Test Num : 5</div><div class="line">Test content : Test&#123;id=6, userName=&apos;c&apos;, email=&apos;c@c.com&apos;, password=&apos;202cb962ac59075b964b07152d234b70&apos;, lastLogin=2016-02-03 12:21:44.0, dateJoined=2016-02-03 12:21:44.0&#125;</div><div class="line">Test Num : 6</div><div class="line">Test content : Test&#123;id=7, userName=&apos;123&apos;, email=&apos;123@123.com&apos;, password=&apos;dddd&apos;, lastLogin=2016-07-15 18:00:27.0, dateJoined=2016-07-15 18:00:27.0&#125;</div></pre></td></tr></table></figure>
<p>由以上的信息可以看出，我们成功连接到了数据库，并且能从中获取我们想要的数据，但是这并不意味这我们将Spring MVC 和Hibernate整合成功了，如果我们此时去访问<a href="http://localhost:10086/springmvc/testAdd，就会发现页面提示500错误信息。" target="_blank" rel="external">http://localhost:10086/springmvc/testAdd，就会发现页面提示500错误信息。</a></p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_011.png" alt=""></p>
<p>其中我们从<font color="red">org.springframework.dao.InvalidDataAccessApiUsageException: Write operations are not allowed in read-only mode (FlushMode.MANUAL): Turn your Session into FlushMode.COMMIT/AUTO or remove ‘readOnly’ marker from transaction definition.</font>错误提示中可以知道，当前正处于read-only状态，只允许读操作，不允许写操作。</p>
<h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>修改dispatcher-servlet.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></div><div class="line">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></div><div class="line">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class="line">       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd</div><div class="line">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd "&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 处理静态资源 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"resources"</span> <span class="attr">mapping</span>=<span class="string">"/resources/**"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;context:component-scan base-package="com.niklaus.springmvc" /&gt;--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.niklaus.springmvc"</span> <span class="attr">use-default-filters</span>=<span class="string">"false"</span> &gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span> <span class="attr">type</span>=<span class="string">"annotation"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<p>修改applicationContext.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></div><div class="line">                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"propertyConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"locations"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:dev/config.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.niklaus.springmvc"</span> &gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span> <span class="attr">type</span>=<span class="string">"annotation"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"spring-db.xml"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<p>保存好修改内容之后，再次访问 <font color="#87CEFA"><a href="http://localhost:10086/springmvc/testAdd" target="_blank" rel="external">http://localhost:10086/springmvc/testAdd</a></font> ，发现此时不再报错，然后查看数据库发现确实增加了username为Tests的 一条数据</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_012.png" alt=""></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>直到此时我们才将Spring MVC 和 Hibernate框架初步整合，支持增删改查等一系列数据交互的操作。如果需要更加强大的功能，还需要后续的步骤。(其实我想说，你需要力量吗，氪金吧O(∩_∩)O)</p>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-07-02</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_006.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring MVC菜鸟之旅" scheme="http://yoursite.com/categories/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85/"/>
    
    
  </entry>
  
  <entry>
    <title>[Spring MVC菜鸟之旅] 通过配置文件看最简单的Spring MVC应用程序</title>
    <link href="http://yoursite.com/2016/06/26/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85-%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9C%8B%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84Spring-MVC%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2016/06/26/Spring-MVC菜鸟之旅-通过配置文件看最简单的Spring-MVC应用程序/</id>
    <published>2016-06-26T15:57:57.000Z</published>
    <updated>2017-07-15T02:35:18.033Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_005.jpg" alt=""><br><a id="more"></a></p>
<h2 id="Spirng-MVC"><a href="#Spirng-MVC" class="headerlink" title="Spirng MVC"></a>Spirng MVC</h2><h3 id="Spring-MVC是什么？"><a href="#Spring-MVC是什么？" class="headerlink" title="Spring MVC是什么？"></a>Spring MVC是什么？</h3><p>Spring MVC是一种基于Java的实现了Web MVC设计模式的请求驱动类型的轻量级Web框架，即使用了MVC架构模式的思想，将web层进行职责解耦,基于请求驱动指的是使用请求-相应模型，框架的目的就是帮助我们简化开发，Spring MVC也是要简化我们日常Web开发的。</p>
<h3 id="核心架构图"><a href="#核心架构图" class="headerlink" title="核心架构图"></a>核心架构图</h3><p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_009.png" alt="核心架构图"></p>
<h3 id="具体流程"><a href="#具体流程" class="headerlink" title="具体流程"></a>具体流程</h3><ol>
<li><font color="red">用户发送请求 —&gt; DispatcherServlet</font>，前端控制器收到请求后自己不进行处理，而是委托给其他的解析器进行处理，作为统一访问点，进行全局的流程控制。</li>
<li><font color="red">DispatcherServlet —&gt; HandlerMapping</font>，HandlerMapping将会把请求映射为HandlerExecutionChain（包含一个Handler处理器（页面控制器）对象、多个HandlerInterceptor拦截器对象）对象，通过这种策略模式，很容易添加新的映射策略。</li>
<li><font color="red">DispatcherServlet —&gt; HandlerAdapter</font>，HandlerAdapter将会把处理器包装为适配器，从而支持多种类型的处理器，即适配器设计模式的应用，从而很容易支持很多类型的处理器。</li>
<li><font color="red"> HandlerAdapter —&gt; 处理器功能处理方法的调用</font>，HandlerAdapter将会根据适配的结果调用真正的处理器的功能处理方法，完成功能处理；并返回一个ModelAndView对象（包含模型数据、逻辑视图名）。</li>
<li><font color="red">ModelAndView逻辑视图名 —&gt; ViewResolver</font>，ViewResolver将把逻辑视图名解析为具体的View，通过这种策略模式，很容易更换其他视图技术。</li>
<li><font color="red">View —&gt; 渲染</font>，View会根据传进来的Model模型数据进行渲染，此处的Model实际是一个Map数据结构，因此很容易支持其他视图技术。</li>
<li><font color="red">返回控制权给DispatcherServlet</font>，由DispatcherServlet返回响应给用户，到此一个流程结束。</li>
</ol>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h3><blockquote>
<p>Java 的Web应用程序中通常都会有一个web.xml文件，这个文件是不是必须的呢？</p>
</blockquote>
<p>要回答上面的问题，首先要了解web.xml文件到底有什么用，web.xml文件是用来配置欢迎页、servlet、filter等的。如果你的应用程序中没有用到这些，自然就不需要web.xml文件了。</p>
<p>Spring MVC的核心是DispatcherServlet，这个Servlet充当Spring MVC的前端控制器。与其他Servlet一样，DispatcherServlet必须在Web应用程序的web.xml文件中进行配置。所以在应用程序中使用Spring MVC的第一件事就是将下面的<servlet>声明放入web.xml中去：</servlet></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div></pre></td></tr></table></figure>
<p>默认情况下，DispatcherServlet在加载时会从一个基于<strong><servlet-name></servlet-name></strong>配置名字的XML文件中加载Spring应用上下文。在这个示例中，因为servlet的名字为dispatcher，DispatcherServlet将尝试从一个名为dispatcher-servlet.xml的文件（位于应用程序的WEB-INF目录下）来加载应用上下文。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div></pre></td></tr></table></figure>
<p>上面示例中声明了DispatcherServlet处理那些URL。通过将DispatcherServlet映射到 / ,声明了它会作为默认的servlet并且会处理所有的请求，包括对静态资源的请求。</p>
<h3 id="dispatcher-servlet-xml"><a href="#dispatcher-servlet-xml" class="headerlink" title="dispatcher-servlet.xml"></a>dispatcher-servlet.xml</h3><p>根据web.xml文件的配置，我们需要在WEB-INF目录下创建dispatcher-servlet.xml文件，DispatcherServlet将使用它来创建应用上下文，而我们也将对Spring MVC的配置写在这个文件上。</p>
<ol>
<li>静态资源访问<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"/resources/**"</span> <span class="attr">mapping</span>=<span class="string">"/resources/"</span> /&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>正如前面所述，所有经过DispatcherServlet的请求必须以一定的方式来进行处理，而通常情况下是需要用控制器进行处理。静态资源的请求也需要通过DispatcherServlet，我们需要以某种方式来告诉DispatcherServlet如何处理这些资源。</p>
<p>恰好<mvc:resources>元素就是做这个的，它建立了一个服务于静态资源的处理器。属性mapping表明路径必须以/resources开始，而且也包括他的任意自路径。属性location表明了要提供服务的文件位置。以上配置表明，所有以/resources路径开头的请求都会自动由应用程序根目录下的/resources目录提供服务。因此我们的所有图片、样式表、JavaScript以及其他的静态资源都必须放在应用程序的/resources目录下。</mvc:resources></p>
<ol>
<li><p>配置注解驱动的Spring MVC<br>在dispatcher-servlet.xml文件中添加一行配置就能得到Spring MVC所提供的注解驱动特性：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>默认扫描包路径</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Controller</div><div class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/system"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value=<span class="string">"/login"</span>,method=RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">login</span><span class="params">()</span></span>&#123;</div><div class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView(<span class="string">"login"</span>);</div><div class="line">        System.out.println(<span class="string">"login"</span>);</div><div class="line">        <span class="keyword">return</span> mav;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>我们先来看一下上一篇文中用作测试的SystemController，虽说比较简单，但还是有许多内容需要介绍。首先@Controller注解表明这个类是一个控制器类。这个类是@Component注解的一种具体化，也就是说<context :="" component-scan="">将查找使用@Component注解的类并将其注册为Bean，就像它们使用@Component注解那样。</context></p>
<p>这意味着我们需要在dispatcher-servlet.xml文件中配置一个<context :="" component-scan="">，这样SystemController类（以及将要编写的所有其他控制器）竟会自动被发现并注册为Bean。以下是相关的XML片段。</context></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.niklaus.learn"</span> /&gt;</span></div></pre></td></tr></table></figure>
<ol>
<li>解析视图<br>处理请求的最后一件必须要做的事情就是为用户渲染输出。为了确定值定的请求需要使用哪个视图，DispatcherServlet会查找一个视图解析器来将控制器返回的逻辑视图名称转换成渲染结果的实际视图。<br>在Spring MVC中，大量使用了约定优于配置的开发模式。InternalResourceViewResolver就是一个面向约定的元素。它将逻辑视图名称解析为View对象，而该对象将渲染的任务委托给Web应用程序上下文的一个模板（通常是JSP）。它通过为逻辑视图名称添加前缀和后缀来确定Web应用程序中的模板路径。<br>假设我们已经将应用程序的所有JSP放在“/WEB-INF/views/”目录下。基于这样的安排，我们需要在dispatcher-servlet.xml中配置InternalResourceViewResolver，如下所示：</li>
</ol>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.JstlView"</span> /&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><ul>
<li>《Spring实战（第3版）》</li>
<li>《跟开涛学Spring MVC》</li>
</ul>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-06-26</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_005.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring MVC菜鸟之旅" scheme="http://yoursite.com/categories/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85/"/>
    
    
  </entry>
  
  <entry>
    <title>[Spring MVC菜鸟之旅] 搭建一个最简单的Spring MVC应用程序</title>
    <link href="http://yoursite.com/2016/06/25/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84Spring-MVC%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2016/06/25/Spring-MVC菜鸟之旅-搭建一个最简单的Spring-MVC应用程序/</id>
    <published>2016-06-25T15:56:05.000Z</published>
    <updated>2017-07-15T02:24:19.790Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_004.jpg" alt=""><br><a id="more"></a></p>
<h2 id="应用结构"><a href="#应用结构" class="headerlink" title="应用结构"></a>应用结构</h2><p>先贴上一张本文最终运行成功的Spring MVC程序的结构图</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_008.png" alt="结构图"></p>
<h2 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h2><h3 id="1-使用Maven导入SpringMVC所依赖的包，修改pom-xml文件"><a href="#1-使用Maven导入SpringMVC所依赖的包，修改pom-xml文件" class="headerlink" title="1.使用Maven导入SpringMVC所依赖的包，修改pom.xml文件"></a>1.使用Maven导入SpringMVC所依赖的包，修改pom.xml文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> </span></div><div class="line"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> </div><div class="line"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 </span></div><div class="line">http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.niklaus.learning<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>learning<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.3.0.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- spring start --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- spring end --&gt;</span></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0-b01<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="2-修改WEB-INF下的web-xml"><a href="#2-修改WEB-INF下的web-xml" class="headerlink" title="2.修改WEB-INF下的web.xml"></a>2.修改WEB-INF下的web.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> </span></div><div class="line"><span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> </div><div class="line"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee </span></div><div class="line">http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" </div><div class="line"><span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- 配置spring核心servlet --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="3-在WEB-INF下创建dispatcher-servlet-xml"><a href="#3-在WEB-INF下创建dispatcher-servlet-xml" class="headerlink" title="3.在WEB-INF下创建dispatcher-servlet.xml"></a>3.在WEB-INF下创建dispatcher-servlet.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span>  </span></div><div class="line">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span>  </div><div class="line">    <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span>  </div><div class="line">    <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span>  </div><div class="line">    <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span>  </div><div class="line">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans  </span></div><div class="line">            http://www.springframework.org/schema/beans/spring-beans.xsd  </div><div class="line">            http://www.springframework.org/schema/mvc  </div><div class="line">            http://www.springframework.org/schema/mvc/spring-mvc.xsd  </div><div class="line">            http://www.springframework.org/schema/context  </div><div class="line">            http://www.springframework.org/schema/context/spring-context.xsd"  </div><div class="line">    <span class="attr">default-lazy-init</span>=<span class="string">"true"</span>&gt;</div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- 处理对静态资源的请求 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"/resources/**"</span> <span class="attr">mapping</span>=<span class="string">"/resources/"</span> /&gt;</span>    </div><div class="line">  </div><div class="line">    <span class="comment">&lt;!-- 添加注解驱动 --&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span>  </div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- 默认扫描的包路径 --&gt;</span>  </div><div class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.niklaus.learn"</span> /&gt;</span> </div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.JstlView"</span> /&gt;</span>  </div><div class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span> </div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="项目测试"><a href="#项目测试" class="headerlink" title="项目测试"></a>项目测试</h2><h3 id="根据dispatcher-servlet-xml配置在-WEB-INF-views下创建前台页面login-jsp"><a href="#根据dispatcher-servlet-xml配置在-WEB-INF-views下创建前台页面login-jsp" class="headerlink" title="根据dispatcher-servlet.xml配置在/WEB-INF/views下创建前台页面login.jsp"></a>根据dispatcher-servlet.xml配置在/WEB-INF/views下创建前台页面login.jsp</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></div><div class="line">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>LOGIN<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello,World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="根据dispatcher-servlet-xml配置的包路径，创建controller"><a href="#根据dispatcher-servlet-xml配置的包路径，创建controller" class="headerlink" title="根据dispatcher-servlet.xml配置的包路径，创建controller"></a>根据dispatcher-servlet.xml配置的包路径，创建controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.niklaus.learn.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</div><div class="line"></div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/system"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemController</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="meta">@RequestMapping</span>(value=<span class="string">"/login"</span>,method=RequestMethod.GET)</div><div class="line">  <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">login</span><span class="params">()</span></span>&#123;</div><div class="line">    ModelAndView mav = <span class="keyword">new</span> ModelAndView(<span class="string">"login"</span>);</div><div class="line">    System.out.println(<span class="string">"login"</span>);</div><div class="line">    <span class="keyword">return</span> mav;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="部署项目，并访问http-localhost-8080-system-login"><a href="#部署项目，并访问http-localhost-8080-system-login" class="headerlink" title="部署项目，并访问http://localhost:8080/system/login"></a>部署项目，并访问<a href="http://localhost:8080/system/login" target="_blank" rel="external">http://localhost:8080/system/login</a></h3><hr>
<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>如此我们就完成了一个最为简单的SpringMVC项目</p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><ul>
<li>发布时间 ： 2016-06-25</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_004.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring MVC菜鸟之旅" scheme="http://yoursite.com/categories/Spring-MVC%E8%8F%9C%E9%B8%9F%E4%B9%8B%E6%97%85/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在同一台电脑配置多个git或者github账号</title>
    <link href="http://yoursite.com/2016/06/18/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%90%8C%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAgit%E6%88%96%E8%80%85github%E8%B4%A6%E5%8F%B7/"/>
    <id>http://yoursite.com/2016/06/18/如何在同一台电脑配置多个git或者github账号/</id>
    <published>2016-06-18T01:02:21.000Z</published>
    <updated>2017-07-15T01:53:31.462Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_002.jpg" alt=""><br><a id="more"></a></p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>当有多个git账号的时候，比如一个github，用于自己进行一些开发活动，再来一个gitlab，一般是公司内部的git。这两者你的邮箱如果不同的话，就会涉及到一个问题，生成第二个git的key的时候会覆盖第一个的key，导致必然有一个用不了。</p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>所谓多个git账号，可能有两种情况：</p>
<p>1 拥有多个github账号，不同的账号对应不同的repo，需要push的时候自动区分账号。</p>
<p>2 拥有多个git的账号，有的是github的，有个事gitlab的，不同的账号对应不同的repo url，需要push的时候自动区分账号。</p>
<p>这两种情况的处理方法是一样的，假设我有两个账号，一个是github上的，一个是gitlab上面的。</p>
<h3 id="生成SSH-Key"><a href="#生成SSH-Key" class="headerlink" title="生成SSH Key"></a>生成SSH Key</h3><h4 id="生成第一个ssh-key（这里我用于github）"><a href="#生成第一个ssh-key（这里我用于github）" class="headerlink" title="生成第一个ssh key（这里我用于github）"></a>生成第一个ssh key（这里我用于github）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;yourmail@github.com&quot;</div></pre></td></tr></table></figure>
<p>一路回车下去，生成结果如下图所示：</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_004.png" alt=""></p>
<p>默认情况下，这个rsa秘钥是在你个人账户的.ssh目录下，存在id_rsa私钥文件和id_rsa.pub公钥文件。然后复制公钥文件中的字符串。进入github账户setting选项SSh and GPC keys，把复制的公钥字符串黏贴到Key的输入框中，保存退出即可。</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_005.png" alt=""></p>
<p>通过终端ssh测试可知，出现如下提示内容，说明秘钥已经生成并且添加成功。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_006.png" alt=""></p>
<h4 id="生成第二个ssh-key（这里我用于gitLab）"><a href="#生成第二个ssh-key（这里我用于gitLab）" class="headerlink" title="生成第二个ssh key（这里我用于gitLab）"></a>生成第二个ssh key（这里我用于gitLab）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa  -f ~/.ssh/id_rsa_gitLab -C &quot;youremail@gitLab.com&quot;</div></pre></td></tr></table></figure>
<p>通过上面的命令，你会发现在~/.ssh目录下又多了id_rsa_gitLab和id_rsa_gitLab.pub两个文件。同样复制id_rsa_gitLab.pub公钥文件中的字符串，进入gitLab账户Profile选项SSH keys下，把复制的公钥字符串黏贴到Key的输入框中，保存退出即可。</p>
<h3 id="添加秘钥到SSH-agent"><a href="#添加秘钥到SSH-agent" class="headerlink" title="添加秘钥到SSH agent"></a>添加秘钥到SSH agent</h3><p>因为默认只读取id_rsa,为了让SSH识别新的私钥，需将其添加的SSH agent中。这里如果你用的github官方的bash，ssh-agent -s,如果是其他的，比如msysgit,eval $(ssh-agent -s)</p>
<p>如果出现 <font size="red">Could not open a connection to your authentication agent</font> 的错误，就是这用一下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ssh-agent bash</div><div class="line">ssh-add ~/.ssh/id_rsa_git</div><div class="line">ssh-add ~/.ssh/id_rsa_gitLab</div></pre></td></tr></table></figure>
<p>最后可以通过下面命令，查看key的设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-add -l</div></pre></td></tr></table></figure>
<h3 id="创建并配置config文件"><a href="#创建并配置config文件" class="headerlink" title="创建并配置config文件"></a>创建并配置config文件</h3><p>在windows下新建一个txt文本，然后将名字后缀一起改成config即可；而在Linux下的话，在.ssh 目录下，直接vim config,如果在bash下，可以通过以下命令生成config文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch config</div></pre></td></tr></table></figure>
<p>向空白的config文件中添加一下内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># gitlab</div><div class="line">Host git.aspectgaming.com</div><div class="line">HostName git.aspectgaming.com </div><div class="line">PreferredAuthentications publickey</div><div class="line">IdentityFile ~/.ssh/id_rsa_gitLab</div><div class="line">User nicholas.chi</div><div class="line"></div><div class="line"># github</div><div class="line">Host github.com</div><div class="line">HostName github.com</div><div class="line">PreferredAuthentications publickey</div><div class="line">IdentityFile ~/.ssh/id_rsa</div><div class="line">User git</div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_007.png" alt=""></p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>如果之前有设置全局用户名和邮箱的话，需要unset一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global --unset user.name</div><div class="line">git config --global --unset user.email</div></pre></td></tr></table></figure>
<p>然后在不同的仓库下设置局部的用户名和邮箱</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config user.email “xxxx@xx.com”</div><div class="line">git config user.name “xxxx</div></pre></td></tr></table></figure>
<p>这样，以后每次在对应的repo下提交修改，都会自动匹配相应的SSH-Key。</p>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p><a href="http://www.jianshu.com/p/f7f4142a1556" target="_blank" rel="external"><font color="#87CEFA">管理git生成的多个ssh key</font></a></p>
<p><a href="http://www.cnblogs.com/qingguo/p/5686247.html" target="_blank" rel="external"><font color="#87CEFA">一台电脑存放多个git账户的多个rsa秘钥</font></a></p>
<p><a href="http://notes.seirhsiao.com/2016/01/24/2014-09-30-github-multiple-account-and-multiple-repository/" target="_blank" rel="external"><font color="#87CEFA">如何同一台电脑配置多个git或github账号</font></a></p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-06-18</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_002.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git将本地仓库上传到远程仓库</title>
    <link href="http://yoursite.com/2016/06/11/git%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E4%B8%8A%E4%BC%A0%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
    <id>http://yoursite.com/2016/06/11/git将本地仓库上传到远程仓库/</id>
    <published>2016-06-11T01:01:50.000Z</published>
    <updated>2017-07-15T01:38:03.081Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_002.jpg" alt=""><br><a id="more"></a></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>在已有的git库中搭建新库，并且将本地的git仓库，上传到远程服务器的git库中，从而开始一个新的项目。</p>
<h2 id="不登录远程git服务器直接本地操作"><a href="#不登录远程git服务器直接本地操作" class="headerlink" title="不登录远程git服务器直接本地操作"></a>不登录远程git服务器直接本地操作</h2><h3 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init</div></pre></td></tr></table></figure>
<p>该命令将创建一个名为.git的子目录，这个子目录含有你初始化的git仓库中所有的必须文件，这些文件是Git仓库的骨干。但是，在这个时候，我们仅仅是做了一个初始化的操作，你的项目里的文件还没有被跟踪。</p>
<h3 id="对指定文件的追踪"><a href="#对指定文件的追踪" class="headerlink" title="对指定文件的追踪"></a>对指定文件的追踪</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git add .</div></pre></td></tr></table></figure>
<h3 id="提交操作"><a href="#提交操作" class="headerlink" title="提交操作"></a>提交操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit -m &apos;first commit&apos;</div></pre></td></tr></table></figure>
<p>当使用 git commit 进行提交操作时，Git 会先计算每一个子目录（本例中只有项目根目录）的校验和，然后在 Git 仓库中这些校验和保存为树对象。 随后，Git 便会创建一个提交对象，它除了包含上面提到的那些信息外，还包含指向这个树对象（项目根目录）的指针。如此一来，Git 就可以在需要的时候重现此次保存的快照</p>
<h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add origin git@xx.xx.xx.xx:repos/xxx/xxx/xxx.git</div></pre></td></tr></table></figure>
<h3 id="推送本地分支到远程仓库"><a href="#推送本地分支到远程仓库" class="headerlink" title="推送本地分支到远程仓库"></a>推送本地分支到远程仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin (remote):(branch)</div></pre></td></tr></table></figure>
<p>推送本地的 remote 分支，将其作为远程仓库的 branch 分支，可以通过这种格式来推送本地分支到一个命名不相同的远程分支。</p>
<h2 id="出现问题"><a href="#出现问题" class="headerlink" title="出现问题"></a>出现问题</h2><h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><font color="red">the file will have its original line endings in your working directory</font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global core.autocrlf  false</div></pre></td></tr></table></figure>
<h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><font color="red">fatal:unable to access ‘xxx/xxx/xxx/…’:Filename too long</font>

<p>相关问题<a href="http://stackoverflow.com/questions/22575662/filename-too-long-in-git-for-windows" target="_blank" rel="external"><font color="#87CEFA">Filename too long in git for windows</font></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global core.longpaths true</div></pre></td></tr></table></figure>
<h3 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h3><font color="red">fatal: Not a valid object name: ‘master’</font> 

<p>相关问题<a href="http://blog.chinaunix.net/uid-26557245-id-3328748.html" target="_blank" rel="external"><font color="#87CEFA">git 错误 fatal: Not a valid object name: ‘master’. </font></a></p>
<h3 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h3><font color="red">error:dst ref refs/heads/source receives form more than one src.</font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin (remote):(branch)</div></pre></td></tr></table></figure>
<p>在remote与branch中间的：不要遗漏，否则就会出现以上问题</p>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><p><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="external"><font color="#87CEFA">git官方文档</font></a></p>
<p><a href="http://blog.csdn.net/w13770269691/article/details/38704941" target="_blank" rel="external"><font color="#87CEFA">git将本地仓库上传到远程仓库</font></a></p>
<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-06-11</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_002.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ Idea使用那些事</title>
    <link href="http://yoursite.com/2016/06/04/IntelliJ-Idea%E4%BD%BF%E7%94%A8%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://yoursite.com/2016/06/04/IntelliJ-Idea使用那些事/</id>
    <published>2016-06-04T01:00:55.000Z</published>
    <updated>2017-07-15T01:37:59.634Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_001.png" alt=""><br><a id="more"></a></p>
<h2 id="配置Jetty"><a href="#配置Jetty" class="headerlink" title="配置Jetty"></a>配置Jetty</h2><h3 id="Run-Debug-Configurations"><a href="#Run-Debug-Configurations" class="headerlink" title="Run/Debug Configurations"></a>Run/Debug Configurations</h3><p>按下图标识打开Run/Debug Configurations面板</p>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_001.png" alt=""></p>
<h3 id="commond-line-添加配置"><a href="#commond-line-添加配置" class="headerlink" title="commond line 添加配置"></a>commond line 添加配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">org.mortbay.jetty:maven-jetty-plugin:6.1.22:run</div></pre></td></tr></table></figure>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_002.png" alt=""></p>
<h3 id="修改端口"><a href="#修改端口" class="headerlink" title="修改端口"></a>修改端口</h3><p>Runner选项-&gt;VM Options 设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-Djetty.port=10086</div></pre></td></tr></table></figure>
<p><img src="http://octlz2jco.bkt.clouddn.com/blog_content_000_000_003.png" alt=""></p>
<h3 id="pom文件添加plugin"><a href="#pom文件添加plugin" class="headerlink" title="pom文件添加plugin"></a>pom文件添加plugin</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.2.1.v20140609<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="参考-amp-引用"><a href="#参考-amp-引用" class="headerlink" title="参考&amp;引用"></a>参考&amp;引用</h2><h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>发布时间 ： 2016-06-04</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://octlz2jco.bkt.clouddn.com/blog_thumbnails_000_000_001.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="IntelliJ Idea" scheme="http://yoursite.com/tags/IntelliJ-Idea/"/>
    
  </entry>
  
</feed>
